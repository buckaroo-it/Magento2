<?php
/**
 * NOTICE OF LICENSE
 *
 * This source file is subject to the MIT License
 * It is available through the world-wide-web at this URL:
 * https://tldrlegal.com/license/mit-license
 * If you are unable to obtain it through the world-wide-web, please send an email
 * to support@buckaroo.nl so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade this module to newer
 * versions in the future. If you wish to customize this module for your
 * needs please contact support@buckaroo.nl for more information.
 *
 * @copyright Copyright (c) Buckaroo B.V.
 * @license   https://tldrlegal.com/license/mit-license
 */
// @codingStandardsIgnoreFile
?>
<div class="giftcards_sort_wrapper">
    <input type="hidden" name="groups[buckaroo_magento2_payment_section][groups][buckaroo_magento2_giftcards][groups][buckaroo_magento2_default][fields][sort_giftcards][value]" id="sort_giftcards"
           value="<?= $block->getConfigGiftCardsSort() ?>">
    <div id="sort_giftcards_list"></div>
</div>

<script>
    require([
        "jquery",
        "jquery/ui",
        "Magento_Theme/js/sortable"
    ], function ($) {
        'use strict';

        let listSelector = '#sort_giftcards_list';
        $(listSelector).sortable({
            axis: 'y',
            tolerance: 'pointer',
            items: 'p',
            stop: function( event, ui ) 
            {
                bkUpdateOrder();
            }
        });

        let ccInherit = $('input[name="groups[buckaroo_magento2_payment_section][groups][buckaroo_magento2_giftcards][groups][buckaroo_magento2_default][fields][sort_giftcards][inherit]"]');
        let selector = 'select[name="groups[buckaroo_magento2_payment_section][groups][buckaroo_magento2_giftcards][groups][buckaroo_magento2_default][fields][allowed_giftcards][value][]"]';
        
        let inputText = $('#sort_giftcards').val();
        let selectorWrapper = '.giftcards_sort_wrapper';

        if (inputText !== '') {
            let cardSortedArray = inputText.split(',');
            cardSortedArray.forEach(function (item, index) {
                let p = document.createElement("p");
                p.innerHTML = item;
                p.classList.add('sort_giftcards');
                $(listSelector).append(p);
            });
        } else {
            $(selector + ' option:selected').each(function () {
                let p = document.createElement("p");
                p.innerHTML = $(this).text();
                p.classList.add('sort_giftcards');
                $(listSelector).append(p);
            });
        }

        $(selector).change(function () {
            $(listSelector +' p').remove();

            $(selector + ' option:selected').each(function () {
                let p = document.createElement("p");
                p.innerHTML = $(this).text();
                p.classList.add('sort_giftcards');
                $(listSelector).append(p);
            });
            bkUpdateOrder();
        });

        const bkUpdateOrder = function () {
            let cardList = '';
            $(listSelector + ' p').each(function () {
                cardList += $(this).text() + ',';
            });
            cardList = cardList.slice(0, -1);
            $('#sort_giftcards').val(cardList);
        };

        function sortableOnOff(status){
            if(status == 'disable'){
                $(listSelector).sortable("disable");
                $(selectorWrapper).addClass('sortable_disable');
            }else{
                $(listSelector).sortable("enable");
                $(selectorWrapper).removeClass('sortable_disable');
            }
        }

        $(document).ready(function() {
            if(ccInherit.is(":checked")){
                sortableOnOff('disable');
            }
        });

        $('body').on('click', ccInherit, function() {
           if(ccInherit.is(":checked")){
             sortableOnOff('disable');
           }else{
             sortableOnOff();
           }
        });
    });
</script>
