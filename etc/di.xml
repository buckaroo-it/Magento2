<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * NOTICE OF LICENSE
 *
 * This source file is subject to the MIT License
 * It is available through the world-wide-web at this URL:
 * https://tldrlegal.com/license/mit-license
 * If you are unable to obtain it through the world-wide-web, please email
 * to support@buckaroo.nl, so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade this module to newer
 * versions in the future. If you wish to customize this module for your
 * needs please contact support@buckaroo.nl for more information.
 *
 * @copyright Copyright (c) Buckaroo B.V.
 * @license   https://tldrlegal.com/license/mit-license
 */
 -->
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
<!--    PREFERENCES-->
    <!-- Interfaces -->
    <preference for="Buckaroo\Magento2\Api\InvoiceRepositoryInterface" type="Buckaroo\Magento2\Model\InvoiceRepository"/>
    <preference for="Buckaroo\Magento2\Api\GiftcardRepositoryInterface" type="Buckaroo\Magento2\Model\GiftcardRepository"/>
    <preference for="Buckaroo\Magento2\Api\GroupTransactionRepositoryInterface" type="Buckaroo\Magento2\Model\GroupTransactionRepository"/>
    <preference for="Buckaroo\Magento2\Api\LogRepositoryInterface" type="Buckaroo\Magento2\Model\LogRepository"/>
    <preference for="Buckaroo\Magento2\Api\PushInterface" type="Buckaroo\Magento2\Model\Push"/>
    <preference for="Buckaroo\Magento2\Api\TransactionResponseInterface" type="Buckaroo\Magento2\Model\Transaction\Status\Response" />
    <preference for="Buckaroo\Magento2\Api\PaymentInformationManagementInterface" type="Buckaroo\Magento2\Model\PaymentInformationManagement"/>
    <preference for="Buckaroo\Magento2\Api\GuestPaymentInformationManagementInterface" type="Buckaroo\Magento2\Model\GuestPaymentInformationManagement"/>
    <preference for="Buckaroo\Magento2\Api\Data\BuckarooResponseDataInterface" type="Buckaroo\Magento2\Model\Data\BuckarooResponseData"/>
    <preference for="Buckaroo\Magento2\Api\Data\BuckarooGiftcardDataInterface" type="Buckaroo\Magento2\Model\Data\BuckarooGiftcardData"/>
    <preference for="Buckaroo\Magento2\Api\Data\BuckarooRestOrderDataInterface" type="Buckaroo\Magento2\Model\BuckarooRestOrderData"/>
    <preference for="Buckaroo\Magento2\Api\Data\LogInterface" type="Buckaroo\Magento2\Model\Data\Log"/>
    <preference for="Buckaroo\Magento2\Api\Data\LogSearchResultsInterface" type="Magento\Framework\Api\SearchResults"/>

    <preference for="Buckaroo\Magento2\Logging\BuckarooLoggerInterface" type="Buckaroo\Magento2\Logging\SimplifiedLog" />

    <!-- Magento Rewrite -->
    <preference for="Magento\Sales\Model\ResourceModel\Order\Handler\State" type="Buckaroo\Magento2\Model\ResourceModel\Order\Handler\State" />
    <preference for="Magento\Sales\Model\Order\CreditmemoFactory" type="Buckaroo\Magento2\Model\Order\CreditmemoFactory" />
    <preference for="Magento\Payment\Gateway\Data\Order\OrderAdapter" type="Buckaroo\Magento2\Gateway\Data\Order\OrderAdapter"/>
    <preference for="Magento\Ui\Model\Export\ConvertToCsv" type="Buckaroo\Magento2\Model\Export\ConvertToCsv" />

    <!-- 3rd Party Rewrite -->
    <preference for="Onestepcheckout\Iosc\Plugin\GuestSaveManager" type="Buckaroo\Magento2\Plugin\GuestSaveManager" />
    <preference for="Mageplaza\Osc\Model\CheckoutManagement" type="Buckaroo\Magento2\Plugin\CheckoutManagement" />


    <!-- Giftcard rest api -->
    <preference for="Buckaroo\Magento2\Model\Voucher\ApplyVoucherRequestInterface" type="Buckaroo\Magento2\Model\Voucher\ApplyVoucherRequest"/>
    <preference for="Buckaroo\Magento2\Model\Giftcard\Request\GiftcardInterface" type="Buckaroo\Magento2\Model\Giftcard\Request\Giftcard"/>
    <preference for="Buckaroo\Magento2\Api\ApplyVoucherInterface" type="Buckaroo\Magento2\Model\Voucher\ApplyVoucher"/>
    <preference for="Buckaroo\Magento2\Api\PayWithGiftcardInterface" type="Buckaroo\Magento2\Model\Giftcard\Api\Pay"/>
    <preference for="Buckaroo\Magento2\Api\GiftcardTransactionInterface" type="Buckaroo\Magento2\Model\Giftcard\Api\GetTransactions"/>
    <preference for="Buckaroo\Magento2\Api\Data\Giftcard\PayResponseSetInterface" type="Buckaroo\Magento2\Model\Giftcard\Api\PayResponse"/>
    <preference for="Buckaroo\Magento2\Api\Data\Giftcard\TransactionResponseInterface" type="Buckaroo\Magento2\Model\Giftcard\Api\TransactionResponse"/>
    <preference for="Buckaroo\Magento2\Api\Data\Giftcard\GetTransactionsResponseInterface" type="Buckaroo\Magento2\Model\Giftcard\Api\GetTransactionsResponse"/>
    <preference for="Buckaroo\Magento2\Api\Data\Giftcard\PayRequestInterface" type="Buckaroo\Magento2\Model\Giftcard\Api\PayRequest"/>
    <!-- END Giftcard rest api -->

    <!-- Express payment methods: Applepay and Paypal-Express -->
    <preference for="Buckaroo\Magento2\Model\Service\QuoteBuilderInterface" type="Buckaroo\Magento2\Model\Service\QuoteBuilder" />

    <!-- Paypal-Express -->
    <preference for="Buckaroo\Magento2\Api\PaypalExpressQuoteCreateInterface" type="Buckaroo\Magento2\Model\PaypalExpress\QuoteCreate" />
    <preference for="Buckaroo\Magento2\Api\PaypalExpressOrderCreateInterface" type="Buckaroo\Magento2\Model\PaypalExpress\OrderCreate" />
    <preference for="Buckaroo\Magento2\Api\Data\PaypalExpress\QuoteCreateResponseInterface" type="Buckaroo\Magento2\Model\PaypalExpress\Response\QuoteCreate" />
    <preference for="Buckaroo\Magento2\Api\Data\PaypalExpress\TotalBreakdownInterface" type="Buckaroo\Magento2\Model\PaypalExpress\Response\TotalBreakdown" />
    <preference for="Buckaroo\Magento2\Api\Data\PaypalExpress\BreakdownItemInterface" type="Buckaroo\Magento2\Model\PaypalExpress\Response\BreakdownItem" />
    <preference for="Buckaroo\Magento2\Api\Data\ExpressMethods\ShippingAddressRequestInterface" type="Buckaroo\Magento2\Model\Service\ShippingAddressRequest" />
    <preference for="Buckaroo\Magento2\Api\Data\PaypalExpress\OrderCreateResponseInterface" type="Buckaroo\Magento2\Model\PaypalExpress\Response\OrderCreate" />
    <!-- END Paypal-Express -->
<!--    END PREFERENCES-->

<!--    PLUGINS-->
    <!-- Checkout-->
    <type name="Magento\Checkout\Controller\Onepage\Success">
        <plugin name="buckaroo_magento2_checkout_success" type="Buckaroo\Magento2\Plugin\Onepage\Success" />
    </type>

    <!-- Sales -->
    <type name="Magento\Sales\Api\OrderRepositoryInterface">
        <plugin name="buckaroo_magento2_add_order_extension_attributes" type="Buckaroo\Magento2\Plugin\OrderExtensionAttribute" />
    </type>

    <type name="Magento\Sales\Api\CreditmemoRepositoryInterface">
        <plugin name="buckaroo_magento2_add_creditmemo_extension_attributes" type="Buckaroo\Magento2\Plugin\CreditmemoExtensionAttribute" />
    </type>

    <type name="Magento\Sales\Model\Order\Pdf\Invoice">
        <plugin name="add_custom_variable_to_invoice" type="Buckaroo\Magento2\Plugin\InvoicePlugin" />
    </type>

    <type name="Magento\Sales\Model\Order\Payment\State\OrderCommand">
        <plugin name="buckaroo_magento2_plugin_commandInterface" type="Buckaroo\Magento2\Plugin\CommandInterface" />
    </type>

    <type name="Magento\Sales\Model\Order\Payment\State\AuthorizeCommand">
        <plugin name="buckaroo_magento2_plugin_commandInterface" type="Buckaroo\Magento2\Plugin\CommandInterface" />
    </type>

    <!-- Cancel Order Plugins -->
    <type name="Magento\Sales\Model\Order">
        <plugin name="buckaroo_magento2_plugin_afterpay" type="Buckaroo\Magento2\Plugin\Method\Afterpay"/>
        <plugin name="buckaroo_magento2_plugin_afterpay2" type="Buckaroo\Magento2\Plugin\Method\Afterpay2"/>
        <plugin name="buckaroo_magento2_plugin_klarna" type="Buckaroo\Magento2\Plugin\Method\Klarna"/>
        <plugin name="buckaroo_magento2_plugin_klarnakp" type="Buckaroo\Magento2\Plugin\Method\Klarnakp"/>
        <plugin name="buckaroo_magento2_plugin_klarnain" type="Buckaroo\Magento2\Plugin\Method\Klarnain"/>
    </type>

    <type name="Buckaroo\Magento2\Plugin\Method\Afterpay">
        <arguments>
            <argument name="paymentMethod" xsi:type="object">AfterpayOldFacade</argument>
        </arguments>
    </type>

    <type name="Buckaroo\Magento2\Plugin\Method\Afterpay2">
        <arguments>
            <argument name="paymentMethod" xsi:type="object">AfterpayFacade</argument>
        </arguments>
    </type>

    <type name="Buckaroo\Magento2\Plugin\Method\Klarna">
        <arguments>
            <argument name="paymentMethod" xsi:type="object">KlarnaFacade</argument>
        </arguments>
    </type>

    <type name="Buckaroo\Magento2\Plugin\Method\Klarnakp">
        <arguments>
            <argument name="paymentMethod" xsi:type="object">KlarnaKpFacade</argument>
        </arguments>
    </type>

    <type name="Buckaroo\Magento2\Plugin\Method\Klarnain">
        <arguments>
            <argument name="paymentMethod" xsi:type="object">KlarnaInFacade</argument>
        </arguments>
    </type>
    <!-- END Cancel Order Plugins -->

    <!-- Quote -->
    <type name="Magento\Quote\Api\CartManagementInterface">
        <plugin name="buckaroo_magento2_plugin_cart_managment" type="Buckaroo\Magento2\Plugin\CartManagement" />
    </type>

    <type name="Magento\Quote\Model\Quote">
        <plugin name="buckaroo_reserve_order_id" type="Buckaroo\Magento2\Plugin\QuotePlugin"/>
    </type>

    <type name="Magento\Quote\Model\Quote\TotalsCollector">
        <plugin name="buckaroo_magento2_fee_total_collector" type="Buckaroo\Magento2\Plugin\TotalsCollector" />
    </type>

    <type name="Magento\Quote\Model\Cart\CartTotalRepository">
        <plugin name="buckaroo_magento2_fee_total" type="Buckaroo\Magento2\Plugin\CartTotalRepository" />
    </type>

    <type name="Magento\Quote\Model\Cart\TotalsConverter">
        <plugin name="buckaroo_magento2_fee_total_converter" type="Buckaroo\Magento2\Plugin\TotalsConverter" />
    </type>

    <type name="Magento\Framework\View\Asset\Minification">
        <plugin name="my-exclude" type="Buckaroo\Magento2\Plugin\ExcludeFilesFromMinification" />
    </type>

    <type name="Magento\CatalogInventory\Model\Configuration">
        <plugin name="buckarooCatalogInventoryConfiguration" type="Buckaroo\Magento2\Plugin\CatalogInventory\Model\Configuration" />
    </type>

    <type name="MyParcelNL\Magento\Model\Checkout\ShippingMethods">
        <plugin name="myParcelNLBuckarooPlugin" type="Buckaroo\Magento2\Plugin\MyParcelNLBuckarooPlugin" />
    </type>

    <type name="Buckaroo\Magento2\Model\Push">
        <plugin name="buckaroo_magento2_paypal_sellersprotection_push" type="Buckaroo\Magento2\Model\Service\Plugin\PaypalSellersProtection\Push" />
        <plugin name="buckaroo_magento2_mpi_push" type="Buckaroo\Magento2\Model\Service\Plugin\Mpi\Push" />
    </type>
<!--    END PLUGINS-->

<!-- DI -->

    <type name="Magento\Framework\Webapi\Rest\Request\DeserializerFactory">
        <arguments>
            <argument name="deserializers" xsi:type="array">
                <item name="application_x-www-form-urlencoded" xsi:type="array">
                    <item name="type" xsi:type="string">application/x-www-form-urlencoded</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Webapi\Rest\Request\Deserializer\XWwwFormUrlencoded</item>
                </item>
                <item name="application_json" xsi:type="array">
                    <item name="type" xsi:type="string">application/json</item>
                    <item name="model" xsi:type="string">Magento\Framework\Webapi\Rest\Request\Deserializer\Json</item>
                </item>
                <item name="application_xml" xsi:type="array">
                    <item name="type" xsi:type="string">application/xml</item>
                    <item name="model" xsi:type="string">Magento\Framework\Webapi\Rest\Request\Deserializer\Xml</item>
                </item>
                <item name="application_xhtml_xml" xsi:type="array">
                    <item name="type" xsi:type="string">application/xhtml+xml</item>
                    <item name="model" xsi:type="string">Magento\Framework\Webapi\Rest\Request\Deserializer\Xml</item>
                </item>
                <item name="text_xml" xsi:type="array">
                    <item name="type" xsi:type="string">text/xml</item>
                    <item name="model" xsi:type="string">Magento\Framework\Webapi\Rest\Request\Deserializer\Xml</item>
                </item>
            </argument>
        </arguments>
    </type>

    <type name="Buckaroo\Magento2\Model\PaymentInformationManagement">
        <arguments>
            <argument name="registry" xsi:type="object">Magento\Framework\Registry</argument>
        </arguments>
    </type>
    <type name="Buckaroo\Magento2\Model\GuestPaymentInformationManagement">
        <arguments>
            <argument name="registry" xsi:type="object">Magento\Framework\Registry</argument>
        </arguments>
    </type>

    <type name="Buckaroo\Magento2\Model\ValidatorFactory">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="push" xsi:type="array">
                    <item name="type" xsi:type="string">push</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\Validator\Push</item>
                </item>
                <item name="redirect_process" xsi:type="array">
                    <item name="type" xsi:type="string">redirect_return</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\Validator\RedirectProcess</item>
                </item>
                <item name="amount" xsi:type="array">
                    <item name="type" xsi:type="string">amount</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\Validator\Amount</item>
                </item>
            </argument>
        </arguments>
    </type>

    <type name="Buckaroo\Magento2\Model\ConfigProvider\Factory">
        <arguments>
            <argument name="configProviders" xsi:type="array">
                <item name="account" xsi:type="array">
                    <item name="type" xsi:type="string">account</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Account</item>
                </item>
                <item name="states" xsi:type="array">
                    <item name="type" xsi:type="string">states</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\States</item>
                </item>
                <item name="buckaroo_fee" xsi:type="array">
                    <item name="type" xsi:type="string">buckaroo_fee</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\BuckarooFee</item>
                </item>
                <item name="allowed_currencies" xsi:type="array">
                    <item name="type" xsi:type="string">allowed_currencies</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\AllowedCurrencies</item>
                </item>
                <item name="refund" xsi:type="array">
                    <item name="type" xsi:type="string">refund</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Refund</item>
                </item>
                <item name="ideal" xsi:type="array">
                    <item name="type" xsi:type="string">ideal</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Ideal</item>
                </item>
                <item name="creditcard" xsi:type="array">
                    <item name="type" xsi:type="string">creditcard</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Creditcard</item>
                </item>
                <item name="creditcards" xsi:type="array">
                    <item name="type" xsi:type="string">creditcards</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Creditcards</item>
                </item>
                <item name="giropay" xsi:type="array">
                    <item name="type" xsi:type="string">giropay</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Giropay</item>
                </item>
                <item name="mrcash" xsi:type="array">
                    <item name="type" xsi:type="string">mrcash</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Mrcash</item>
                </item>
                <item name="paypal" xsi:type="array">
                    <item name="type" xsi:type="string">paypal</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Paypal</item>
                </item>
                <item name="payconiq" xsi:type="array">
                    <item name="type" xsi:type="string">payconiq</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Payconiq</item>
                </item>
                <item name="sepadirectdebit" xsi:type="array">
                    <item name="type" xsi:type="string">sepadirectdebit</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\SepaDirectDebit</item>
                </item>
                <item name="sofortbanking" xsi:type="array">
                    <item name="type" xsi:type="string">sofortbanking</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Sofortbanking</item>
                </item>
                <item name="belfius" xsi:type="array">
                    <item name="type" xsi:type="string">belfius</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Belfius</item>
                </item>
                <item name="transfer" xsi:type="array">
                    <item name="type" xsi:type="string">transfer</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Transfer</item>
                </item>
                <item name="afterpay" xsi:type="array">
                    <item name="type" xsi:type="string">afterpay</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Afterpay</item>
                </item>
                <item name="afterpay2" xsi:type="array">
                    <item name="type" xsi:type="string">afterpay2</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Afterpay2</item>
                </item>
                <item name="afterpay20" xsi:type="array">
                    <item name="type" xsi:type="string">afterpay20</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Afterpay20</item>
                </item>
                <item name="billink" xsi:type="array">
                    <item name="type" xsi:type="string">billink</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Billink</item>
                </item>
                <item name="payperemail" xsi:type="array">
                    <item name="type" xsi:type="string">payperemail</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\PayPerEmail</item>
                </item>
                <item name="paylink" xsi:type="array">
                    <item name="type" xsi:type="string">paylink</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\PayLink</item>
                </item>
                <item name="eps" xsi:type="array">
                    <item name="type" xsi:type="string">eps</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Eps</item>
                </item>
                <item name="giftcards" xsi:type="array">
                    <item name="type" xsi:type="string">giftcards</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Giftcards</item>
                </item>
                <item name="kbc" xsi:type="array">
                    <item name="type" xsi:type="string">kbc</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Kbc</item>
                </item>
                <item name="klarna" xsi:type="array">
                    <item name="type" xsi:type="string">klarna</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Klarna</item>
                </item>
                <item name="klarnakp" xsi:type="array">
                    <item name="type" xsi:type="string">klarnakp</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Klarnakp</item>
                </item>
                <item name="klarnain" xsi:type="array">
                    <item name="type" xsi:type="string">klarnain</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Klarnain</item>
                </item>
                <item name="applepay" xsi:type="array">
                    <item name="type" xsi:type="string">applepay</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Applepay</item>
                </item>
                <item name="capayablein3" xsi:type="array">
                    <item name="type" xsi:type="string">capayablein3</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\CapayableIn3</item>
                </item>
                <item name="in3" xsi:type="array">
                    <item name="type" xsi:type="string">in3</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\CapayableIn3</item>
                </item>
                <item name="capayablepostpay" xsi:type="array">
                    <item name="type" xsi:type="string">capayablepostpay</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\CapayablePostpay</item>
                </item>
                <item name="alipay" xsi:type="array">
                    <item name="type" xsi:type="string">alipay</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Alipay</item>
                </item>
                <item name="wechatpay" xsi:type="array">
                    <item name="type" xsi:type="string">wechatpay</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Wechatpay</item>
                </item>
                <item name="p24" xsi:type="array">
                    <item name="type" xsi:type="string">p24</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\P24</item>
                </item>
                <item name="trustly" xsi:type="array">
                    <item name="type" xsi:type="string">trustly</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Trustly</item>
                </item>
                <item name="pospayment" xsi:type="array">
                    <item name="type" xsi:type="string">pospayment</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Pospayment</item>
                </item>
                <item name="creditclick" xsi:type="array">
                    <item name="type" xsi:type="string">creditclick</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\CreditClick</item>
                </item>
                <item name="voucher" xsi:type="array">
                    <item name="type" xsi:type="string">voucher</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Voucher</item>
                </item>
                <item name="paybybank" xsi:type="array">
                    <item name="type" xsi:type="string">paybybank</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\PayByBank</item>
                </item>
                <item name="mbway" xsi:type="array">
                    <item name="type" xsi:type="string">mbway</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\MBWay</item>
                </item>
                <item name="multibanco" xsi:type="array">
                    <item name="type" xsi:type="string">multibanco</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Multibanco</item>
                </item>
                <item name="knaken" xsi:type="array">
                    <item name="type" xsi:type="string">knaken</item>
                    <item name="model" xsi:type="string">Buckaroo\Magento2\Model\ConfigProvider\Method\Knaken</item>
                </item>
            </argument>
        </arguments>
    </type>
    <type name="Buckaroo\Magento2\Model\ConfigProvider\CompositeConfigProvider">
        <arguments>
            <argument name="configProviders" xsi:type="array">
                <item name="buckaroo_magento2_configprovider_account" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Account</item>
                <item name="buckaroo_magento2_configprovider_buckaroofee" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\BuckarooFee</item>
                <item name="buckaroo_magento2_configprovider_refund" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Refund</item>
                <item name="buckaroo_magento2_configprovider_states" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\States</item>
            </argument>
        </arguments>
    </type>

    <type name="Buckaroo\Magento2\Block\Adminhtml\Sales\Order\Creditmemo\Create\BankFields">
        <arguments>
            <argument name="refundFieldsFactory" xsi:type="object">Buckaroo\Magento2\Model\RefundFieldsFactory</argument>
        </arguments>
    </type>

    <type name="Buckaroo\Magento2\Model\RefundFieldsFactory">
    </type>

    <type name="Buckaroo\Magento2\Block\Info\Creditcard">
        <arguments>
            <argument name="configProvider" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Creditcard</argument>
        </arguments>
    </type>

    <type name="Buckaroo\Magento2\Observer\SetTransactionOnInvoiceObserver">
        <arguments>
            <argument name="stateCommand" xsi:type="object">Magento\Sales\Model\Order\Payment\State\RegisterCaptureNotificationCommand</argument>
        </arguments>
    </type>

    <!--Logging-->
    <type name="Buckaroo\Magento2\Logging\Log">
        <arguments>
            <argument name="name" xsi:type="string">buckaroo_logging</argument>
            <argument name="handlers"  xsi:type="array">
                <item name="exception" xsi:type="object">Buckaroo\Magento2\Logging\CriticalHandler</item>
                <item name="debug" xsi:type="object">Buckaroo\Magento2\Logging\DebugHandler</item>
            </argument>
        </arguments>
    </type>
    <type name="Buckaroo\Magento2\Logging\SimplifiedLog">
        <arguments>
            <argument name="name" xsi:type="string">buckaroo_log</argument>
            <argument name="handlers"  xsi:type="array">
                <item name="exception" xsi:type="object">Buckaroo\Magento2\Logging\CriticalHandler</item>
                <item name="debug" xsi:type="object">Buckaroo\Magento2\Logging\DebugHandler</item>
            </argument>
        </arguments>
    </type>

    <type name="Magento\Framework\View\Element\UiComponent\DataProvider\CollectionFactory">
        <arguments>
            <argument name="collections" xsi:type="array">
                <item name="buckaroo_magento2_log_listing_data_source" xsi:type="string">Buckaroo\Magento2\Model\ResourceModel\Log\Grid\Collection</item>
            </argument>
        </arguments>
    </type>
    <virtualType name="Buckaroo\Magento2\Model\ResourceModel\Log\Grid\Collection" type="Magento\Framework\View\Element\UiComponent\DataProvider\SearchResult">
        <arguments>
            <argument name="mainTable" xsi:type="string">buckaroo_magento2_log</argument>
            <argument name="resourceModel" xsi:type="string">Buckaroo\Magento2\Model\ResourceModel\Log\Collection</argument>
        </arguments>
    </virtualType>

<!-- END DI -->

<!-- PAYMENT METHODS -->

    <!-- PUSH -->
    <type name="Buckaroo\Magento2\Model\Push\PushProcessorsFactory">
        <arguments>
            <argument name="pushProcessors" xsi:type="array">
                <item name="default" xsi:type="string">Buckaroo\Magento2\Model\Push\DefaultProcessor</item>
                <item name="credit_managment" xsi:type="string">Buckaroo\Magento2\Model\Push\CreditManagmentProcessor</item>
                <item name="group_transaction" xsi:type="string">Buckaroo\Magento2\Model\Push\GroupTransactionPushProcessor</item>
                <item name="refund" xsi:type="string">Buckaroo\Magento2\Model\Push\RefundProcessor</item>
                <item name="cancel_authorize" xsi:type="string">Buckaroo\Magento2\Model\Push\CancelAuthorizeProcessor</item>
                <item name="ideal" xsi:type="string">Buckaroo\Magento2\Model\Push\LockedPushProcessor</item>
                <item name="paypal" xsi:type="string">Buckaroo\Magento2\Model\Push\PaypalProcessor</item>
                <item name="afterpay" xsi:type="string">Buckaroo\Magento2\Model\Push\AfterpayProcessor</item>
                <item name="klarna" xsi:type="string">Buckaroo\Magento2\Model\Push\KlarnaProcessor</item>
                <item name="klarnakp" xsi:type="string">Buckaroo\Magento2\Model\Push\KlarnaKpProcessor</item>
                <item name="payperemail" xsi:type="string">Buckaroo\Magento2\Model\Push\PayPerEmailProcessor</item>
                <item name="payconiq" xsi:type="string">Buckaroo\Magento2\Model\Push\PayconiqProcessor</item>
                <item name="transfer" xsi:type="string">Buckaroo\Magento2\Model\Push\TransferProcessor</item>
            </argument>
        </arguments>
    </type>

    <!-- PHP SDK - Map Payment Methods -->
    <type name="Buckaroo\Magento2\Model\Adapter\BuckarooAdapter">
        <arguments>
            <argument name="mapPaymentMethods" xsi:type="array">
                <item name="klaranain" xsi:type="string">klarna</item>
                <item name="p24" xsi:type="string">przelewy24</item>
                <item name="kbc" xsi:type="string">kbcpaymentbutton</item>
                <item name="Capayable" xsi:type="string">in3old</item>
                <item name="capayablein3" xsi:type="string">in3old</item>
                <item name="afterpay20" xsi:type="string">afterpay</item>
                <item name="afterpay" xsi:type="string">afterpaydigiaccept</item>
                <item name="afterpay2" xsi:type="string">afterpaydigiaccept</item>
                <item name="giftcards" xsi:type="string">giftcard</item>
                <item name="sofortbanking" xsi:type="string">sofortueberweisung</item>
                <item name="creditcards" xsi:type="string">creditcard</item>
                <item name="mrcash" xsi:type="string">bancontactmrcash</item>
                <item name="paylink" xsi:type="string">payperemail</item>
            </argument>
        </arguments>
    </type>

    <!-- Payment Gateway - Response Handler-->
    <type name="Buckaroo\Magento2\Gateway\Response\RestoreQuoteHandler">
        <arguments>
            <argument name="cartRepository" xsi:type="object">Magento\Quote\Model\QuoteRepository\Proxy</argument>
        </arguments>
    </type>

    <!-- Buckaroo Payment Provider Gateway  -->

    <!-- Commands infrastructure -->
    <type name="Magento\Payment\Gateway\Command\CommandManagerPool">
        <arguments>
            <argument name="executors" xsi:type="array">
                <item name="buckaroo" xsi:type="string">BuckarooCommandManager</item>
            </argument>
        </arguments>
    </type>
    <virtualType name="BuckarooCommandManager" type="Magento\Payment\Gateway\Command\CommandManager">
        <arguments>
            <argument name="commandPool" xsi:type="object">BuckarooCommandPool</argument>
        </arguments>
    </virtualType>
    <virtualType name="BuckarooCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="paylink" xsi:type="string">PayLinkCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- iDIN service (Age verification) -->
    <type name="Buckaroo\Magento2\Controller\Checkout\Idin">
        <arguments>
            <argument name="requestDataBuilder" xsi:type="object">IdinVerifyRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="clientInterface" xsi:type="object">TransactionVerify</argument>
        </arguments>
    </type>
    <virtualType name="IdinVerifyRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="idin" xsi:type="string">Buckaroo\Magento2\Gateway\Request\IdinDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Commands infrastructure -->

    <!-- Buckaroo validators infrastructure -->
    <type name="Magento\Payment\Model\MethodList">
        <arguments>
            <argument name="additionalChecks" xsi:type="array">
                <item name="ip" xsi:type="string">ip</item>
            </argument>
        </arguments>
    </type>
    <virtualType name="BuckarooValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="buckaroo_availability" xsi:type="string">BuckarooAvailabilityValidator</item>
                <item name="country" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\CountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Availability Validators-->
    <virtualType name="BuckarooAvailabilityValidator" type="Magento\Payment\Gateway\Validator\ValidatorComposite">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="account_config" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\ActiveAccountValidator</item>
                <item name="area_code" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\AreaCodeValidator</item>
                <item name="based_on_amount" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\AvailableBasedOnAmountValidator</item>
                <item name="based_on_currency" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\AvailableBasedOnCurrencyValidator</item>
                <item name="based_on_customer_group" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\AvailableBasedOnCustomerGroupValidator</item>
                <item name="based_on_pos_settings" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\AvailableBasedOnPOSValidator</item>
                <item name="spam_limit" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\SpamLimitValidator</item>
            </argument>
            <argument name="chainBreakingValidators" xsi:type="array">
                <item name="account_config" xsi:type="string">account_config</item>
                <item name="area_code" xsi:type="string">area_code</item>
                <item name="based_on_ip" xsi:type="string">based_on_ip</item>
                <item name="based_on_amount" xsi:type="string">based_on_amount</item>
                <item name="based_on_currency" xsi:type="string">based_on_currency</item>
                <item name="based_on_customer_group" xsi:type="string">based_on_customer_group</item>
                <item name="based_on_pos_settings" xsi:type="string">based_on_pos_settings</item>
                <item name="spam_limit" xsi:type="string">spam_limit</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Buckaroo validators infrastructure -->

    <!-- Gateway Client Types -->
    <virtualType name="TransactionAuthorize" type="Buckaroo\Magento2\Gateway\Http\Client\DefaultTransaction">
        <arguments>
            <argument name="action" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::AUTHORIZE</argument>
        </arguments>
    </virtualType>
    <virtualType name="TransactionAuthorizeEncrypted" type="Buckaroo\Magento2\Gateway\Http\Client\DefaultTransaction">
        <arguments>
            <argument name="action" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::AUTHORIZE_ENCRYPTED</argument>
        </arguments>
    </virtualType>
    <virtualType name="TransactionCancel" type="Buckaroo\Magento2\Gateway\Http\Client\DefaultTransaction">
        <arguments>
            <argument name="action" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::CANCEL</argument>
        </arguments>
    </virtualType>
    <virtualType name="TransactionCancelReserve" type="Buckaroo\Magento2\Gateway\Http\Client\DefaultTransaction">
        <arguments>
            <argument name="action" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::CANCEL_RESERVE</argument>
        </arguments>
    </virtualType>
    <virtualType name="TransactionCapture" type="Buckaroo\Magento2\Gateway\Http\Client\DefaultTransaction">
        <arguments>
            <argument name="action" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::CAPTURE</argument>
        </arguments>
    </virtualType>
    <virtualType name="TransactionPay" type="Buckaroo\Magento2\Gateway\Http\Client\DefaultTransaction">
        <arguments>
            <argument name="action" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::PAY</argument>
        </arguments>
    </virtualType>
    <virtualType name="TransactionPayInInstallments" type="Buckaroo\Magento2\Gateway\Http\Client\DefaultTransaction">
        <arguments>
            <argument name="action" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::PAY_IN_INSTALLMENTS</argument>
        </arguments>
    </virtualType>
    <virtualType name="TransactionPayRedirect" type="Buckaroo\Magento2\Gateway\Http\Client\DefaultTransaction">
        <arguments>
            <argument name="action" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::PAY_REDIRECT</argument>
        </arguments>
    </virtualType>
    <virtualType name="TransactionRefund" type="Buckaroo\Magento2\Gateway\Http\Client\DefaultTransaction">
        <arguments>
            <argument name="action" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::REFUND</argument>
        </arguments>
    </virtualType>
    <virtualType name="TransactionCreditManagmentVoid" type="Buckaroo\Magento2\Gateway\Http\Client\DefaultTransaction">
        <arguments>
            <argument name="action" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::CREATE_CREDIT_NOTE</argument>
        </arguments>
    </virtualType>
    <virtualType name="TransactionReserve" type="Buckaroo\Magento2\Gateway\Http\Client\DefaultTransaction">
        <arguments>
            <argument name="action" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::RESERVE</argument>
        </arguments>
    </virtualType>
    <virtualType name="TransactionPaymentInvitation" type="Buckaroo\Magento2\Gateway\Http\Client\DefaultTransaction">
        <arguments>
            <argument name="action" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::PAYMENT_INVITATION</argument>
        </arguments>
    </virtualType>
    <virtualType name="TransactionVerify" type="Buckaroo\Magento2\Gateway\Http\Client\DefaultTransaction">
        <arguments>
            <argument name="action" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::VERIFY</argument>
        </arguments>
    </virtualType>
    <virtualType name="TransactionAuthorizePayRemainder" type="Buckaroo\Magento2\Gateway\Http\Client\TransactionPayRemainder">
        <arguments>
            <argument name="serviceAction" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::AUTHORIZE</argument>
            <argument name="newServiceAction" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::PAY_REMAINDER</argument>
        </arguments>
    </virtualType>
    <virtualType name="TransactionEncryptedPayRemainder" type="Buckaroo\Magento2\Gateway\Http\Client\TransactionPayRemainder">
        <arguments>
            <argument name="serviceAction" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::PAY_ENCRYPTED</argument>
            <argument name="newServiceAction" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::PAY_REMAINDER_ENCRYPTED</argument>
        </arguments>
    </virtualType>
    <virtualType name="TransactionInInstallmentsPayRemainder" type="Buckaroo\Magento2\Gateway\Http\Client\TransactionPayRemainder">
        <arguments>
            <argument name="serviceAction" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::PAY_IN_INSTALLMENTS</argument>
            <argument name="newServiceAction" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::PAY_REMAINDER</argument>
        </arguments>
    </virtualType>
    <!-- END Gateway Client Types -->

    <!-- Message Mapper -->
    <virtualType name="Buckaroo\Magento2\Gateway\ErrorMapper\VirtualConfigReader" type="Magento\Payment\Gateway\ErrorMapper\VirtualConfigReader">
        <arguments>
            <argument name="fileName" xsi:type="string">buckaroo_error_mapping.xml</argument>
        </arguments>
    </virtualType>
    <virtualType name="Buckaroo\Magento2\Gateway\ErrorMapper\VirtualMappingData" type="Magento\Payment\Gateway\ErrorMapper\MappingData">
        <arguments>
            <argument name="reader" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\VirtualConfigReader</argument>
            <argument name="cacheId" xsi:type="string">buckaroo_error_mapper</argument>
        </arguments>
    </virtualType>
    <type name="Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper">
        <arguments>
            <argument name="messageMapping" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\VirtualMappingData</argument>
        </arguments>
    </type>
    <!-- END Message Mapper -->

    <!-- Buckaroo REQUEST -->
    <!-- Buckaroo Builder Composite with ID -->
    <virtualType name="BuckarooWithIdBuilderComposite" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="usingId" xsi:type="boolean">true</argument>
        </arguments>
    </virtualType>

    <type name="Buckaroo\Magento2\Gateway\Request\Articles\ArticlesHandler\ArticlesHandlerFactory">
        <arguments>
            <argument name="articlesHandlers" xsi:type="array">
                <item name="default" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Articles\ArticlesHandler\DefaultHandler</item>
                <item name="afterpay" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Articles\ArticlesHandler\AfterpayOldHandler</item>
                <item name="afterpay20" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Articles\ArticlesHandler\AfterpayHandler</item>
                <item name="capayablein3" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Articles\ArticlesHandler\CapayableIn3Handler</item>
                <item name="billink" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Articles\ArticlesHandler\BillinkHandler</item>
                <item name="klarnakp" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Articles\ArticlesHandler\KlarnaKpHandler</item>
            </argument>
        </arguments>
    </type>
    <!-- Buckaroo AddressHandlerPool - Change Shipping Request by Delivery Methods-->
    <type name="Buckaroo\Magento2\Gateway\Request\AddressHandlerPool">
        <arguments>
            <argument name="addressHandlers" xsi:type="array">
                <item name="postnl_postnl" xsi:type="object">Buckaroo\Magento2\Gateway\Request\AddressHandler\PostNLAddressHandler\Proxy</item>
                <item name="dpdpickup_dpdpickup" xsi:type="object">Buckaroo\Magento2\Gateway\Request\AddressHandler\DPDPickupAddressHandler\Proxy</item>
                <item name="dhlparcel_servicepoint" xsi:type="object">Buckaroo\Magento2\Gateway\Request\AddressHandler\DHLParcelAddressHandler\Proxy</item>
                <item name="sendcloud_sendcloud" xsi:type="object">Buckaroo\Magento2\Gateway\Request\AddressHandler\SendCloudAddressHandler\Proxy</item>
                <item name="myparcel_myparcel" xsi:type="object">Buckaroo\Magento2\Gateway\Request\AddressHandler\MyParcelAddressHandler\Proxy</item>
            </argument>
        </arguments>
    </type>
    <!-- Additional Parameters Data Builder Types -->
    <virtualType name="AdditionalParametersOrderDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BasicParameter\AdditionalParametersDataBuilder">
        <arguments>
            <argument name="action" xsi:type="string">order</argument>
        </arguments>
    </virtualType>
    <virtualType name="AdditionalParametersRefundDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BasicParameter\AdditionalParametersDataBuilder">
        <arguments>
            <argument name="action" xsi:type="string">refund</argument>
        </arguments>
    </virtualType>
    <virtualType name="AdditionalParametersPayDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BasicParameter\AdditionalParametersDataBuilder">
        <arguments>
            <argument name="action" xsi:type="string">pay</argument>
        </arguments>
    </virtualType>
    <virtualType name="AdditionalParametersPayInInstallmentsDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BasicParameter\AdditionalParametersDataBuilder">
        <arguments>
            <argument name="action" xsi:type="string">payininstallments</argument>
        </arguments>
    </virtualType>
    <virtualType name="AdditionalParametersReserveDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BasicParameter\AdditionalParametersDataBuilder">
        <arguments>
            <argument name="action" xsi:type="string">reserve</argument>
        </arguments>
    </virtualType>
    <virtualType name="AdditionalParametersAuthorizeDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BasicParameter\AdditionalParametersDataBuilder">
        <arguments>
            <argument name="action" xsi:type="string">authorize</argument>
        </arguments>
    </virtualType>
    <virtualType name="AdditionalParametersCaptureDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BasicParameter\AdditionalParametersDataBuilder">
        <arguments>
            <argument name="action" xsi:type="string">capture</argument>
        </arguments>
    </virtualType>
    <virtualType name="AdditionalParametersCancelDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BasicParameter\AdditionalParametersDataBuilder">
        <arguments>
            <argument name="action" xsi:type="string">cancelauthorize</argument>
        </arguments>
    </virtualType>
    <virtualType name="AdditionalParametersPayPerEmailDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BasicParameter\AdditionalParametersDataBuilder">
        <arguments>
            <argument name="action" xsi:type="string">fromPayPerEmail</argument>
        </arguments>
    </virtualType>
    <virtualType name="AdditionalParametersPayLinkDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BasicParameter\AdditionalParametersDataBuilder">
        <arguments>
            <argument name="action" xsi:type="string">fromPayLink</argument>
        </arguments>
    </virtualType>
    <!-- END Additional Parameters Data Builder Types -->
    <!-- END Buckaroo REQUEST -->

    <!-- Buckaroo Commands infrastructure -->
    <virtualType name="BuckarooFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Ideal::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">IdealValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">BuckarooValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">BuckarooGatewayCommandPool</argument>
        </arguments>
    </virtualType>
    <virtualType name="BuckarooRemainderFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Ideal::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">IdealValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">BuckarooValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">BuckarooRemainderGatewayCommandPool</argument>
        </arguments>
    </virtualType>
    <virtualType name="BuckarooGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">BuckarooOrderCommand</item>
                <item name="refund" xsi:type="string">BuckarooRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="BuckarooRemainderGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">BuckarooRemainderOrderCommand</item>
                <item name="refund" xsi:type="string">BuckarooRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Buckaroo Order Command -->
    <virtualType name="BuckarooOrderCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">BuckarooOrderRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionPay</argument>
            <argument name="handler" xsi:type="object">OrderResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <virtualType name="BuckarooRemainderOrderCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">BuckarooRemainderRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">Buckaroo\Magento2\Gateway\Http\Client\TransactionPayRemainder</argument>
            <argument name="handler" xsi:type="object">OrderResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- Buckaroo Order Command - Request Builder -->
    <virtualType name="BuckarooOrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="method" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\PaymentMethodDataBuilder</item>
                <item name="currency" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\CurrencyDataBuilder</item>
                <item name="amount_debit" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\AmountDebitDataBuilder</item>
                <item name="invoice" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\InvoiceDataBuilder</item>
                <item name="custom_parameters" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\CustomParametersDataBuilder</item>
                <item name="description" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\DescriptionDataBuilder</item>
                <item name="client_ip" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ClientIPDataBuilder</item>
                <item name="return_url" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ReturnUrlDataBuilder</item>
                <item name="save_order" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\SaveOrderBeforeDataBuilder</item>
                <item name="additional_parameters" xsi:type="string">AdditionalParametersPayDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="BuckarooRemainderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="method" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\PaymentMethodDataBuilder</item>
                <item name="currency" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\CurrencyDataBuilder</item>
                <item name="amount_debit" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\AmountDebitDataBuilder</item>
                <item name="invoice" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\InvoiceDataBuilder</item>
                <item name="custom_parameters" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\CustomParametersDataBuilder</item>
                <item name="description" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\DescriptionDataBuilder</item>
                <item name="client_ip" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ClientIPDataBuilder</item>
                <item name="return_url" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ReturnUrlDataBuilder</item>
                <item name="save_order" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\SaveOrderBeforeDataBuilder</item>
                <item name="additional_parameters" xsi:type="string">AdditionalParametersPayDataBuilder</item>
                <item name="amount" xsi:type="string">Buckaroo\Magento2\Gateway\Request\PayReminder\AmountDataBuilder</item>
                <item name="original_transaction_key" xsi:type="string">Buckaroo\Magento2\Gateway\Request\PayReminder\OriginalTransactionKeyDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="BuckarooPayRemainderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="amount" xsi:type="string">Buckaroo\Magento2\Gateway\Request\PayReminder\AmountDataBuilder</item>
                <item name="original_transaction_key" xsi:type="string">Buckaroo\Magento2\Gateway\Request\PayReminder\OriginalTransactionKeyDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Buckaroo Order Command - Response Handler -->
    <virtualType name="OrderResponseHandler" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="transaction_id" xsi:type="string">Buckaroo\Magento2\Gateway\Response\TransactionIdHandler</item>
                <item name="payment_details" xsi:type="string">Buckaroo\Magento2\Gateway\Response\PaymentDetailsHandler</item>
                <item name="payment_in_transit" xsi:type="string">Buckaroo\Magento2\Gateway\Response\PaymentInTransitHandler</item>
                <item name="skip_push" xsi:type="string">Buckaroo\Magento2\Gateway\Response\SkipPushHandler</item>
                <item name="restore_quote" xsi:type="string">Buckaroo\Magento2\Gateway\Response\RestoreQuoteHandler</item>
                <item name="test_notification" xsi:type="string">Buckaroo\Magento2\Gateway\Response\TestNotificationHandler</item>
                <item name="dispatch_event" xsi:type="string">OrderDispatchEventHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="OrderDispatchEventHandler"  type="Buckaroo\Magento2\Gateway\Response\DispatchEventHandler">
        <arguments>
            <argument name="command" xsi:type="string">order</argument>
        </arguments>
    </virtualType>
    <!-- END Buckaroo Order Command -->

    <!-- Buckaroo Authorize Command - Response Handler -->
    <virtualType name="AuthorizeResponseHandler" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="transaction_id" xsi:type="string">Buckaroo\Magento2\Gateway\Response\AuthorizeTransactionIdHandler</item>
                <item name="payment_details" xsi:type="string">Buckaroo\Magento2\Gateway\Response\PaymentDetailsHandler</item>
                <item name="payment_in_transit" xsi:type="string">Buckaroo\Magento2\Gateway\Response\PaymentInTransitHandler</item>
                <item name="skip_push" xsi:type="string">Buckaroo\Magento2\Gateway\Response\SkipPushHandler</item>
                <item name="restore_quote" xsi:type="string">Buckaroo\Magento2\Gateway\Response\RestoreQuoteHandler</item>
                <item name="test_notification" xsi:type="string">Buckaroo\Magento2\Gateway\Response\TestNotificationHandler</item>
                <item name="dispatch_event" xsi:type="string">AuthorizeDispatchEventHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="AuthorizeDispatchEventHandler" type="Buckaroo\Magento2\Gateway\Response\DispatchEventHandler">
        <arguments>
            <argument name="command" xsi:type="string">authorize</argument>
        </arguments>
    </virtualType>
    <!-- END Buckaroo Authorize Command -->

    <!-- Buckaroo Capture Command -->
    <virtualType name="BuckarooCaptureCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">BuckarooCaptureRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionCapture</argument>
            <argument name="handler" xsi:type="object">CaptureResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- Buckaroo Capture Command - Request Builder -->
    <virtualType name="BuckarooCaptureRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="method" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\PaymentMethodDataBuilder</item>
                <item name="description" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\DescriptionDataBuilder</item>
                <item name="client_ip" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ClientIPDataBuilder</item>
                <item name="return_url" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ReturnUrlDataBuilder</item>
                <item name="additional_parameters" xsi:type="string">AdditionalParametersCaptureDataBuilder</item>
                <item name="invoice" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Invoice\InvoiceNumberDataBuilder</item>
                <item name="amountDebit" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Invoice\AmountInvoicedDataBuilder</item>
                <item name="original_transaction_key" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Invoice\OriginalTransactionKeyDataBuilder</item>
                <item name="order" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\OrderNumberDataBuilder</item>
                <item name="articles" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Articles\InvoicedArticlesDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Buckaroo Capture Command - Response Handler -->
    <virtualType name="CaptureResponseHandler" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="transaction_id" xsi:type="string">Buckaroo\Magento2\Gateway\Response\TransactionIdHandler</item>
                <item name="payment_details" xsi:type="string">Buckaroo\Magento2\Gateway\Response\PaymentDetailsHandler</item>
                <item name="payment_in_transit" xsi:type="string">Buckaroo\Magento2\Gateway\Response\PaymentInTransitHandler</item>
                <item name="skip_push" xsi:type="string">Buckaroo\Magento2\Gateway\Response\SkipPushHandler</item>
                <item name="dispatch_event" xsi:type="string">CaptureDispatchEventHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="CaptureDispatchEventHandler" type="Buckaroo\Magento2\Gateway\Response\DispatchEventHandler">
        <arguments>
            <argument name="command" xsi:type="string">capture</argument>
        </arguments>
    </virtualType>
    <!-- END Buckaroo Capture Command -->

    <!-- Buckaroo Refund Command -->
    <virtualType name="BuckarooRefundCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">BuckarooRefundRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionRefund</argument>
            <argument name="handler" xsi:type="object">RefundResponseHandler</argument>
            <argument name="validator" xsi:type="object">RefundValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- Buckaroo Refund Command - Request Builder -->
    <virtualType name="BuckarooRefundRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="method" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\PaymentMethodDataBuilder</item>
                <item name="invoice" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\InvoiceDataBuilder</item>
                <item name="original_transaction_key" xsi:type="string">Buckaroo\Magento2\Gateway\Request\AdditionalInformation\OriginalTransactionKeyDataBuilder</item>
                <item name="currency" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\CurrencyDataBuilder</item>
                <item name="amount_credit" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\AmountCreditDataBuilder</item>
                <item name="return_url" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ReturnUrlDataBuilder</item>
                <item name="client_ip" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ClientIPDataBuilder</item>
                <item name="description" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\RefundDescriptionDataBuilder</item>
                <item name="additional_parameters" xsi:type="string">AdditionalParametersRefundDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Buckaroo Partial Refund Command - Request Builder -->
    <virtualType name="BuckarooPartialRefundRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="method" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\PaymentMethodDataBuilder</item>
                <item name="invoice" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\InvoiceDataBuilder</item>
                <item name="original_transaction_key" xsi:type="string">Buckaroo\Magento2\Gateway\Request\RefundOriginalTransactionKeyDataBuilder</item>
                <item name="currency" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\CurrencyDataBuilder</item>
                <item name="amount_credit" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\AmountCreditDataBuilder</item>
                <item name="return_url" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ReturnUrlDataBuilder</item>
                <item name="client_ip" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ClientIPDataBuilder</item>
                <item name="description" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\RefundDescriptionDataBuilder</item>
                <item name="additional_parameters" xsi:type="string">AdditionalParametersRefundDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Buckaroo Refund Command - Response Validator -->
    <virtualType name="RefundValidator" type="Magento\Payment\Gateway\Validator\ValidatorComposite">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="pending_approval" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\RefundPendingApprovalValidator</item>
                <item name="status" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</item>
            </argument>
            <argument name="chainBreakingValidators" xsi:type="array">
                <item name="pending_approval" xsi:type="string">pending_approval</item>
                <item name="status" xsi:type="string">status</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Buckaroo Refund Command - Response Handler -->
    <virtualType name="RefundResponseHandler" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="transaction_id" xsi:type="string">Buckaroo\Magento2\Gateway\Response\RefundTransactionIdHandler</item>
                <item name="payment_details" xsi:type="string">Buckaroo\Magento2\Gateway\Response\PaymentDetailsHandler</item>
                <item name="payment_in_transit" xsi:type="string">Buckaroo\Magento2\Gateway\Response\PaymentInTransitHandler</item>
                <item name="skip_push" xsi:type="string">Buckaroo\Magento2\Gateway\Response\SkipPushHandler</item>
                <item name="dispatch_event" xsi:type="string">RefundDispatchEventHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="RefundDispatchEventHandler" type="Buckaroo\Magento2\Gateway\Response\DispatchEventHandler">
        <arguments>
            <argument name="command" xsi:type="string">refund</argument>
        </arguments>
    </virtualType>

    <!-- Refund Group Transaction-->
    <type name="Buckaroo\Magento2\Service\RefundGroupTransactionService">
        <arguments>
            <argument name="requestDataBuilder" xsi:type="object">BuckarooRefundGroupTransactionRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="clientInterface" xsi:type="object">TransactionRefund</argument>
            <argument name="handler" xsi:type="object">RefundResponseHandler</argument>
        </arguments>
    </type>
    <virtualType name="BuckarooRefundGroupTransactionRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="invoice" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\InvoiceDataBuilder</item>
                <item name="currency" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\CurrencyDataBuilder</item>
                <item name="return_url" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ReturnUrlDataBuilder</item>
                <item name="client_ip" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ClientIPDataBuilder</item>
                <item name="description" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\DescriptionDataBuilder</item>
                <item name="additional_parameters" xsi:type="string">AdditionalParametersRefundDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Buckaroo Refund Command -->

    <!-- Buckaroo Cancel Command -->
    <virtualType name="BuckarooCancelCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">BuckarooCancelRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionCancel</argument>
            <argument name="handler" xsi:type="object">CancelResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- Buckaroo Cancel Command - Request Builder -->
    <virtualType name="BuckarooCancelRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="method" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\PaymentMethodDataBuilder</item>
                <item name="invoice" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\InvoiceDataBuilder</item>
                <item name="original_transaction_key" xsi:type="string">Buckaroo\Magento2\Gateway\Request\AdditionalInformation\OriginalTransactionKeyDataBuilder</item>
                <item name="currency" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\CurrencyDataBuilder</item>
                <item name="amount_credit" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\AmountCreditDataBuilder</item>
                <item name="return_url" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ReturnUrlDataBuilder</item>
                <item name="client_ip" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ClientIPDataBuilder</item>
                <item name="description" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\DescriptionDataBuilder</item>
                <item name="additional_parameters" xsi:type="string">AdditionalParametersCancelDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Buckaroo Cancel Command - Response Handler -->
    <virtualType name="CancelResponseHandler" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="transaction_id" xsi:type="string">Buckaroo\Magento2\Gateway\Response\TransactionIdHandler</item>
                <item name="payment_details" xsi:type="string">Buckaroo\Magento2\Gateway\Response\PaymentDetailsHandler</item>
                <item name="payment_in_transit" xsi:type="string">Buckaroo\Magento2\Gateway\Response\PaymentInTransitHandler</item>
                <item name="skip_push" xsi:type="string">Buckaroo\Magento2\Gateway\Response\SkipPushHandler</item>
                <item name="cancel_details" xsi:type="string">Buckaroo\Magento2\Gateway\Response\CancelHandler</item>
                <item name="dispatch_event" xsi:type="string">CancelDispatchEventHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="CancelDispatchEventHandler" type="Buckaroo\Magento2\Gateway\Response\DispatchEventHandler">
        <arguments>
            <argument name="command" xsi:type="string">cancel</argument>
        </arguments>
    </virtualType>
    <!-- END Buckaroo Cancel Command -->

    <!-- Credit Managment -->
    <!-- Buckaroo Credit Managment - Order Command -->
    <virtualType name="BuckarooDefaultCreditManagment" type="Buckaroo\Magento2\Gateway\Request\CreditManagement\BuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="group" xsi:type="string">BuckarooCreditManagmentGroup</item>
                <item name="phone" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\PhoneDataBuilder</item>
                <item name="email" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\EmailAddressDataBuilder</item>
                <item name="config" xsi:type="string">Buckaroo\Magento2\Gateway\Request\CreditManagement\ConfigDataBuilder</item>
                <item name="invoice" xsi:type="string">Buckaroo\Magento2\Gateway\Request\CreditManagement\InvoiceDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="BuckarooCreditManagmentGroup" type="BuckarooWithIdBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="person" xsi:type="string">Buckaroo\Magento2\Gateway\Request\CreditManagement\PersonDataBuilder</item>
                <item name="address" xsi:type="string">Buckaroo\Magento2\Gateway\Request\CreditManagement\AddressDataBuilder</item>
                <item name="company" xsi:type="string">Buckaroo\Magento2\Gateway\Request\CreditManagement\CompanyDataBuilder</item>
                <item name="debtor" xsi:type="string">Buckaroo\Magento2\Gateway\Request\CreditManagement\DebtorDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Buckaroo Credit Managment - Order Command -->

    <!-- Buckaroo Credit Managment - Refund Command -->
    <virtualType name="BuckarooRefundWithCreditManagementCommand" type="BuckarooRefundCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">BuckarooRefundWithCreditManagementRequest</argument>
            <argument name="client" xsi:type="object">TransactionRefund</argument>
        </arguments>
    </virtualType>
    <virtualType name="BuckarooRefundWithCreditManagementRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="refund_request" xsi:type="string">BuckarooRefundRequest</item>
                <item name="credit_management" xsi:type="string">BuckarooDefaultRefundCreditManagment</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="BuckarooDefaultRefundCreditManagment" type="Buckaroo\Magento2\Gateway\Request\CreditManagement\BuilderComposite">
        <arguments>
            <argument name="type" xsi:type="const">Buckaroo\Magento2\Gateway\Request\CreditManagement\BuilderComposite::TYPE_REFUND</argument>
            <argument name="builders" xsi:type="array">
                <item name="invoice" xsi:type="string">Buckaroo\Magento2\Gateway\Request\CreditManagement\InvoiceDataBuilder</item>
                <item name="invoice_key" xsi:type="string">Buckaroo\Magento2\Gateway\Request\CreditManagement\InvoiceKeyDataBuilder</item>
                <item name="invoice_number" xsi:type="string">Buckaroo\Magento2\Gateway\Request\CreditManagement\InvoiceNumberDataBuilder</item>
                <item name="client_ip" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ClientIPDataBuilder</item>
                <item name="description" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\DescriptionDataBuilder</item>
                <item name="return_url" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ReturnUrlDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Buckaroo Credit Managment - Refund Command -->

    <!-- Buckaroo Credit Managment - Cancel Command -->
    <type name="Buckaroo\Magento2\Observer\VoidCm3Payment">
        <arguments>
            <argument name="voidCommand" xsi:type="object">BuckarooVoidCreditManagementCommand</argument>
        </arguments>
    </type>
    <virtualType name="BuckarooVoidCreditManagementCommand" type="BuckarooRefundCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">BuckarooVoidCreditManagementRequest</argument>
        </arguments>
    </virtualType>
    <virtualType name="BuckarooVoidCreditManagementRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="method" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\PaymentMethodDataBuilder</item>
                <item name="credit_management" xsi:type="string">BuckarooDefaultVoidCreditManagment</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="BuckarooDefaultVoidCreditManagment" type="BuckarooDefaultRefundCreditManagment">
        <arguments>
            <argument name="type" xsi:type="const">Buckaroo\Magento2\Gateway\Request\CreditManagement\BuilderComposite::TYPE_VOID</argument>
        </arguments>
    </virtualType>
    <!-- END Buckaroo Credit Managment - Cancel Command -->
    <!-- END Credit Managment -->


    <!-- End Buckaroo Refund Command -->
    <!-- Buckaroo Order Command - Response Handler -->
    <virtualType name="OrderWithCreditManagementResponseHandler"  type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="response" xsi:type="string">OrderResponseHandler</item>
                <item name="credit_management" xsi:type="string">Buckaroo\Magento2\Gateway\Response\CreditManagementOrderHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Buckaroo Commands infrastructure -->
    <!-- END Buckaroo Payment Provider Gateway -->

    <!-- Payment Method: iDEAL -->
    <!-- iDEAL Payment Method Facade configuration -->
    <virtualType name="IdealFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Ideal::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">IdealAdminInfo</argument>
            <argument name="valueHandlerPool" xsi:type="object">IdealValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">IdealValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">IdealCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- iDEAL Value handlers infrastructure -->
    <virtualType name="IdealValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">IdealConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="IdealConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Ideal</argument>
        </arguments>
    </virtualType>
    <virtualType name="IdealAdminInfo" type="Buckaroo\Magento2\Block\AdminInfo">
        <arguments>
            <argument name="config" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Ideal</argument>
        </arguments>
    </virtualType>
    <!-- END iDEAL Value handlers infrastructure -->

    <!-- iDEAL validators infrastructure -->
    <virtualType name="IdealValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="buckaroo_availability" xsi:type="string">BuckarooAvailabilityValidator</item>
                <item name="country" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\CountryValidator</item>
                <item name="global" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\IssuerValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END iDEAL validators infrastructure -->

    <!-- iDEAL Commands infrastructure -->
    <virtualType name="IdealCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">IdealOrderCommand</item>
                <item name="refund" xsi:type="string">BuckarooRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- iDEAL Order Command -->
    <virtualType name="IdealOrderCommand" type="BuckarooRemainderOrderCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">IdealOrderRequest</argument>
        </arguments>
    </virtualType>
    <!-- iDEAL Order Command - Request Builder -->
    <virtualType name="IdealOrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order" xsi:type="string">BuckarooRemainderRequest</item>
                <item name="method" xsi:type="string">Buckaroo\Magento2\Gateway\Request\GatewaySettingDataBuilder</item>
                <item name="issuer" xsi:type="string">Buckaroo\Magento2\Gateway\Request\AdditionalInformation\IssuerDataBuilder</item>
                <item name="continueOnIncomplete" xsi:type="string">Buckaroo\Magento2\Gateway\Request\ContinueOnIncompleteDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END iDEAL Order Command -->
    <!-- END iDEAL Commands infrastructure -->
    <!-- END Payment Method: iDEAL -->


    <!-- Payment Method: Klarna -->
    <!-- Klarna Payment Method Facade configuration -->
    <virtualType name="KlarnaFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Klarna::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">KlarnaValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">BuckarooValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">KlarnaGatewayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Klarna Value handlers infrastructure -->
    <virtualType name="KlarnaValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">KlarnaConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="KlarnaConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Klarna</argument>
        </arguments>
    </virtualType>
    <!-- END Klarna Value handlers infrastructure -->

    <!-- Klarna Commands infrastructure -->
    <virtualType name="KlarnaGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">KlarnaOrderCommand</item>
                <item name="refund" xsi:type="string">BuckarooRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Klarna Order Command -->
    <virtualType name="KlarnaOrderCommand" type="BuckarooRemainderOrderCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">KlarnaOrderRequest</argument>
        </arguments>
    </virtualType>

    <!-- Klarna Order Command - Request Builder -->
    <virtualType name="KlarnaOrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order" xsi:type="string">BuckarooRemainderRequest</item>
                <item name="customer" xsi:type="string">CustomerKlarnaDataBuilder</item>
                <item name="articles" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Articles\ArticlesDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="CustomerKlarnaDataBuilder" type="BuckarooWithIdBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="shipping" xsi:type="string">KlarnaBillingDataBuilder</item>
                <item name="billing" xsi:type="string">KlarnaShippingDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="KlarnaBillingDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="recipient" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Recipient\KlarnaDataBuilder</item>
                <item name="address" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\BillingAddressDataBuilder</item>
                <item name="phone" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\PhoneDataBuilder</item>
                <item name="email" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\EmailAddressDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="KlarnaShippingDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="recipient" xsi:type="string">KlarnaShippingRecipientDataBuilder</item>
                <item name="address" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\ShippingAddressDataBuilder</item>
                <item name="phone" xsi:type="string">PhoneShippingDataBuilder</item>
                <item name="email" xsi:type="string">EmailAddressShippingDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="KlarnaShippingRecipientDataBuilder" type="Buckaroo\Magento2\Gateway\Request\Recipient\KlarnaDataBuilder">
        <arguments>
            <argument name="addressType" xsi:type="string">shipping</argument>
        </arguments>
    </virtualType>
    <!-- END Klarna Order Command -->
    <!-- END Klarna Commands infrastructure -->
    <!-- END Payment Method: Klarna -->


    <!-- Payment Method: KlarnaIn (Klarna Slice It) -->
    <!-- KlarnaIn Payment Method Facade configuration -->
    <virtualType name="KlarnaInFacade" type="KlarnaFacade">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Klarnain::CODE</argument>
            <argument name="valueHandlerPool" xsi:type="object">KlarnaInValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">KlarnaInGatewayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- KlarnaIn Value handlers infrastructure -->
    <virtualType name="KlarnaInValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">KlarnaInConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="KlarnaInConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Klarnain</argument>
        </arguments>
    </virtualType>
    <!-- END KlarnaIn Value handlers infrastructure -->

    <!-- KlarnaIn Commands infrastructure -->
    <virtualType name="KlarnaInGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">KlarnaInOrderCommand</item>
                <item name="refund" xsi:type="string">BuckarooRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- KlarnaIn Order Command -->
    <virtualType name="KlarnaInOrderCommand" type="KlarnaOrderCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">KlarnaInOrderRequest</argument>
            <argument name="client" xsi:type="object">TransactionInInstallmentsPayRemainder</argument>
        </arguments>
    </virtualType>

    <!-- KlarnaIn Order Command - Request Builder -->
    <virtualType name="KlarnaInOrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="klarna_order_request" xsi:type="string">KlarnaOrderRequest</item>
                <item name="additional_parameters" xsi:type="string">AdditionalParametersPayInInstallmentsDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END KlarnaIn Order Command -->
    <!-- END KlarnaIn Commands infrastructure -->
    <!-- END Payment Method: KlarnaIn -->


    <!-- Payment Method: KlarnaKp -->
    <!-- KlarnaKp Payment Method Facade configuration -->
    <virtualType name="KlarnaKpFacade" type="KlarnaFacade">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Klarnakp::CODE</argument>
            <argument name="valueHandlerPool" xsi:type="object">KlarnaKpValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">KlarnaKpGatewayCommandPool</argument>
        </arguments>
    </virtualType>
    <!-- KlarnaKp Value handlers infrastructure -->
    <virtualType name="KlarnaKpValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">KlarnaKpConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="KlarnaKpConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Klarnakp</argument>
        </arguments>
    </virtualType>
    <!-- END KlarnaKp Value handlers infrastructure -->

    <!-- KlarnaKp Commands infrastructure -->
    <virtualType name="KlarnaKpGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="authorize" xsi:type="string">KlarnaKpAuthorizeCommand</item>
                <item name="capture" xsi:type="string">KlarnaKpCaptureCommand</item>
                <item name="cancel" xsi:type="string">KlarnaKpCancelCommand</item>
                <item name="void" xsi:type="string">KlarnaKpCancelCommand</item>
                <item name="refund" xsi:type="string">BuckarooRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- KlarnaKp Authorize Command -->
    <virtualType name="KlarnaKpAuthorizeCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">KlarnaKpAuthorizeRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionReserve</argument>
            <argument name="handler" xsi:type="object">KlarnaKpAuthorizeResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- KlarnaKp Authorize Command - Request Builder -->
    <virtualType name="KlarnaKpAuthorizeRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="klarnakp_reserve_request" xsi:type="string">Buckaroo\Magento2\Gateway\Request\ReserveDataBuilder</item>
                <item name="order_request" xsi:type="string">BuckarooOrderRequest</item>
                <item name="customer" xsi:type="string">CustomerKlarnaKpDataBuilder</item>
                <item name="articles" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Articles\ArticlesDataBuilder</item>
                <item name="additional_parameters" xsi:type="string">AdditionalParametersReserveDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="CustomerKlarnaKpDataBuilder" type="BuckarooWithIdBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="shipping" xsi:type="string">KlarnaKpBillingDataBuilder</item>
                <item name="billing" xsi:type="string">KlarnaKpShippingDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="KlarnaKpBillingDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="recipient" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Recipient\KlarnaKpDataBuilder</item>
                <item name="address" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\BillingAddressDataBuilder</item>
                <item name="phone" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\PhoneDataBuilder</item>
                <item name="email" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\EmailAddressDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="KlarnaKpShippingDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="recipient" xsi:type="string">KlarnaKpShippingRecipientDataBuilder</item>
                <item name="address" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\ShippingAddressDataBuilder</item>
                <item name="phone" xsi:type="string">PhoneShippingDataBuilder</item>
                <item name="email" xsi:type="string">EmailAddressShippingDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="KlarnaKpShippingRecipientDataBuilder" type="Buckaroo\Magento2\Gateway\Request\Recipient\KlarnaKpDataBuilder">
        <arguments>
            <argument name="addressType" xsi:type="string">shipping</argument>
        </arguments>
    </virtualType>
    <!-- KlarnaKp Authorize Command - Response Handler -->
    <virtualType name="KlarnaKpAuthorizeResponseHandler" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="authorize" xsi:type="string">AuthorizeResponseHandler</item>
                <item name="reservationNumber" xsi:type="string">Buckaroo\Magento2\Gateway\Response\ReservationNumberHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END KlarnaKp Authorize Command -->

    <!-- KlarnaKp Capture Command -->
    <virtualType name="KlarnaKpCaptureCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">KlarnaKpCaptureRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionPay</argument>
            <argument name="handler" xsi:type="object">CaptureResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- KlarnaKp Capture Command - Request Builder -->
    <virtualType name="KlarnaKpCaptureRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="method" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\PaymentMethodDataBuilder</item>
                <item name="description" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\DescriptionDataBuilder</item>
                <item name="client_ip" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ClientIPDataBuilder</item>
                <item name="return_url" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ReturnUrlDataBuilder</item>
                <item name="additional_parameters" xsi:type="string">AdditionalParametersPayDataBuilder</item>
                <item name="invoice" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Invoice\InvoiceNumberDataBuilder</item>
                <item name="amountDebit" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Invoice\AmountInvoicedDataBuilder</item>
                <item name="reservation_number" xsi:type="string">Buckaroo\Magento2\Gateway\Request\ReservationNumberDataBuilder</item>
                <item name="order" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\OrderNumberDataBuilder</item>
                <item name="articles" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Articles\InvoicedArticlesDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- KlarnaKp Capture Command - Response Handler -->
    <virtualType name="KlarnaKpCaptureResponseHandler" type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="authorize" xsi:type="string">CaptureResponseHandler</item>
                <item name="klarnakp" xsi:type="string">Buckaroo\Magento2\Gateway\Response\KlarnaKpHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END KlarnaKp Capture Command -->

    <!-- KlarnaKp Cancel Command -->
    <virtualType name="KlarnaKpCancelCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">KlarnaKpCancelRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionCancelReserve</argument>
            <argument name="handler" xsi:type="object">CancelResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- KlarnaKp Cancel Command - Request Builder -->
    <virtualType name="KlarnaKpCancelRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="method" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\PaymentMethodDataBuilder</item>
                <item name="description" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\DescriptionDataBuilder</item>
                <item name="client_ip" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ClientIPDataBuilder</item>
                <item name="return_url" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ReturnUrlDataBuilder</item>
                <item name="reservation_number" xsi:type="string">Buckaroo\Magento2\Gateway\Request\ReservationNumberDataBuilder</item>
                <item name="invoice" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\InvoiceDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END KlarnaKp Cancel Command -->
    <!-- END KlarnaKp Commands infrastructure -->
    <!-- END Payment Method: KlarnaKp -->


    <!-- Payment Method: Alipay -->
    <!-- Alipay Payment Method Facade configuration -->
    <virtualType name="AlipayFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Alipay::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">AlipayValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">BuckarooValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">AlipayGatewayCommandPool</argument>
        </arguments>
    </virtualType>
    <!-- Alipay Value handlers infrastructure -->
    <virtualType name="AlipayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">AlipayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="AlipayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Alipay</argument>
        </arguments>
    </virtualType>
    <!-- END Alipay Value handlers infrastructure -->

    <!-- Alipay Commands infrastructure -->
    <virtualType name="AlipayGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">AlipayOrderCommand</item>
                <item name="refund" xsi:type="string">BuckarooRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Alipay Order Command -->
    <virtualType name="AlipayOrderCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">AlipayOrderRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">Buckaroo\Magento2\Gateway\Http\Client\TransactionPayRemainder</argument>
            <argument name="handler" xsi:type="object">OrderResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- Alipay Order Command - Request Builder -->
    <virtualType name="AlipayOrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order" xsi:type="string">BuckarooRemainderRequest</item>
                <item name="use_mobile_view" xsi:type="string">Buckaroo\Magento2\Gateway\Request\UseMobileViewDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Alipay Order Command -->
    <!-- END Alipay Commands infrastructure -->
    <!-- END Payment Method: Alipay -->


    <!-- Payment Method: Giropay -->
    <!-- Giropay Payment Method Facade configuration -->
    <virtualType name="GiropayFacade" type="BuckarooFacade">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Giropay::CODE</argument>
            <argument name="valueHandlerPool" xsi:type="object">GiropayValueHandlerPool</argument>
        </arguments>
    </virtualType>
    <!-- Giropay Value handlers infrastructure -->
    <virtualType name="GiropayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">GiropayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="GiropayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Giropay</argument>
        </arguments>
    </virtualType>
    <!-- END Giropay Value handlers infrastructure -->
    <!-- END Payment Method: Giropay -->


    <!-- Payment Method: Trustly -->
    <!-- Trustly Payment Method Facade configuration -->
    <virtualType name="TrustlyFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Trustly::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">TrustlyValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">BuckarooValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">TrustlyGatewayCommandPool</argument>
        </arguments>
    </virtualType>
    <!-- Trustly Value handlers infrastructure -->
    <virtualType name="TrustlyValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">TrustlyConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="TrustlyConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Trustly</argument>
        </arguments>
    </virtualType>
    <!-- END Trustly Value handlers infrastructure -->

    <!-- Trustly Commands infrastructure -->
    <virtualType name="TrustlyGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">TrustlyOrderCommand</item>
                <item name="refund" xsi:type="string">BuckarooRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Trustly Order Command -->
    <virtualType name="TrustlyOrderCommand" type="BuckarooRemainderOrderCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">TrustlyOrderRequest</argument>
        </arguments>
    </virtualType>
    <!-- Trustly Order Command - Request Builder -->
    <virtualType name="TrustlyOrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">BuckarooRemainderRequest</item>
                <item name="country" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BillingAddress\CountryDataBuilder</item>
                <item name="customer_name" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BillingAddress\CustomerNameDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Trustly Order Command -->
    <!-- END Trustly Commands infrastructure -->
    <!-- END Payment Method: Trustly -->


    <!-- Payment Method: Przelewy24 -->
    <!-- Przelewy24 Payment Method Facade configuration -->
    <virtualType name="Przelewy24Facade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\P24::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">Przelewy24ValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">BuckarooValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">Przelewy24GatewayCommandPool</argument>
        </arguments>
    </virtualType>
    <!-- Przelewy24 Value handlers infrastructure -->
    <virtualType name="Przelewy24ValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">Przelewy24ConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="Przelewy24ConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\P24</argument>
        </arguments>
    </virtualType>
    <!-- END Przelewy24 Value handlers infrastructure -->

    <!-- Przelewy24 Commands infrastructure -->
    <virtualType name="Przelewy24GatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">Przelewy24OrderCommand</item>
                <item name="refund" xsi:type="string">BuckarooRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Przelewy24 Order Command -->
    <virtualType name="Przelewy24OrderCommand" type="BuckarooOrderCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">Przelewy24OrderRequest</argument>
        </arguments>
    </virtualType>
    <!-- Przelewy24 Order Command - Request Builder -->
    <virtualType name="Przelewy24OrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">BuckarooRemainderRequest</item>
                <item name="email" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BillingAddress\EmailDataBuilder</item>
                <item name="customer_name" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BillingAddress\CustomerNameDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Przelewy24 Order Command -->
    <!-- END Przelewy24 Commands infrastructure -->
    <!-- END Payment Method: Przelewy24 -->


    <!-- Payment Method: Belfius -->
    <!-- Belfius Payment Method Facade configuration -->
    <virtualType name="BelfiusFacade" type="BuckarooRemainderFacade">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Belfius::CODE</argument>
            <argument name="valueHandlerPool" xsi:type="object">BelfiusValueHandlerPool</argument>
        </arguments>
    </virtualType>
    <!-- Belfius Value handlers infrastructure -->
    <virtualType name="BelfiusValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">BelfiusConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="BelfiusConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Belfius</argument>
        </arguments>
    </virtualType>
    <!-- END Belfius Value handlers infrastructure -->
    <!-- END Payment Method: Belfius -->

     <!-- Payment Method: Capayable -->
    <!-- Capayable Payment Method Facade configuration -->
    <virtualType name="CapayableFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\CapayableIn3::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">CapayableValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">BuckarooValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">CapayableGatewayCommandPool</argument>
        </arguments>
    </virtualType>
    <!-- Capayable Value handlers infrastructure -->
    <virtualType name="CapayableValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CapayableConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="CapayableConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\CapayableIn3</argument>
        </arguments>
    </virtualType>
    <!-- END Capayable Value handlers infrastructure -->

    <!-- Capayable Commands infrastructure -->
    <virtualType name="CapayableGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">CapayableOrderCommand</item>
                <item name="refund" xsi:type="string">BuckarooRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- CapayableV3OrderCommand Order Command -->
    <virtualType name="CapayableOrderCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CapayableVersionDataBuilder</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">Buckaroo\Magento2\Gateway\Http\Client\TransactionPayOrInInstallments</argument>
            <argument name="handler" xsi:type="object">OrderResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <virtualType name="CapayableVersionDataBuilder" type="Buckaroo\Magento2\Gateway\Request\VersionDataBuilder">
        <arguments>
            <argument name="v2" xsi:type="object">CapayableV2OrderRequest</argument>
            <argument name="v1" xsi:type="object">CapayableV3OrderRequest</argument>
        </arguments>
    </virtualType>

    <!-- Capayable Order Command - Request Builder -->
    <virtualType name="CapayableV3OrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">BuckarooOrderRequest</item>
                <item name="in3_v3" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Capayable\In3V3DataBuilder</item>
                <item name="customer_type" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Capayable\CustomerTypeDataBuilder</item>
                <item name="customer" xsi:type="string">CustomerCapayableDataBuilder</item>
                <item name="articles" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Articles\ArticlesDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Capayable Order Command - Request Builder -->
    <virtualType name="CapayableV2OrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <!-- Default -->
                <item name="order_request" xsi:type="string">BuckarooOrderRequest</item>
                <item name="additional_parameters" xsi:type="string">AdditionalParametersPayInInstallmentsDataBuilder</item>

                <item name="articles" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Articles\ArticlesDataBuilder</item>
                <!-- Only for in3 v2-->
                <item name="email" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BillingAddress\EmailDataBuilder</item>
                <item name="phone" xsi:type="string">CapayablePhone</item>
                <item name="customer_type" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Capayable\CustomerTypeDataBuilder</item>
                <item name="invoice_date" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Capayable\InvoiceDateDataBuilder</item>
                <item name="customer" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Capayable\CustomerDataBuilder</item>
                <item name="address" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\BillingAddressDataBuilder</item>
                <item name="sub_totals" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Capayable\SubTotalsDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="CustomerCapayableDataBuilder" type="BuckarooWithIdBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="billing" xsi:type="string">CapayableBillingDataBuilder</item>
                <item name="shipping" xsi:type="string">CapayableShippingDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="CapayableBillingDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="recipient" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Recipient\CapayableDataBuilder</item>
                <item name="address" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\BillingAddressDataBuilder</item>
                <item name="phone" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\PhoneDataBuilder</item>
                <item name="email" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\EmailAddressDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="CapayableShippingDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="address" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\ShippingAddressDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="CapayableShippingRecipientDataBuilder" type="Buckaroo\Magento2\Gateway\Request\Recipient\CapayableDataBuilder">
        <arguments>
            <argument name="addressType" xsi:type="string">shipping</argument>
        </arguments>
    </virtualType>
    <virtualType name="CapayablePhone" type="Buckaroo\Magento2\Gateway\Request\Capayable\PhoneDataBuilder">
        <arguments>
            <argument name="phoneFormatter" xsi:type="object">Buckaroo\Magento2\Service\Formatter\Address\PhoneFormatter</argument>
        </arguments>
    </virtualType>
    <!-- END Capayable Order Command -->
    <!-- END Capayable Commands infrastructure -->
    <!-- END Payment Method: Capayable -->

    <!-- Payment Method: Eps -->
    <!-- Eps Payment Method Facade configuration -->
    <virtualType name="EpsFacade" type="BuckarooRemainderFacade">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Eps::CODE</argument>
            <argument name="valueHandlerPool" xsi:type="object">EpsValueHandlerPool</argument>
            <argument name="usesRedirect" xsi:type="boolean">false</argument>
        </arguments>
    </virtualType>
    <!-- Eps Value handlers infrastructure -->
    <virtualType name="EpsValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">EpsConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="EpsConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Eps</argument>
        </arguments>
    </virtualType>
    <!-- END Eps Value handlers infrastructure -->
    <!-- END Payment Method: Eps -->

    <!-- Payment Method: Kbc -->
    <!-- Kbc Payment Method Facade configuration -->
    <virtualType name="KbcFacade" type="BuckarooRemainderFacade">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Kbc::CODE</argument>
            <argument name="valueHandlerPool" xsi:type="object">KbcValueHandlerPool</argument>
        </arguments>
    </virtualType>
    <!-- Kbc Value handlers infrastructure -->
    <virtualType name="KbcValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">KbcConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="KbcConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Kbc</argument>
        </arguments>
    </virtualType>
    <!-- END Kbc Value handlers infrastructure -->
    <!-- END Payment Method: Kbc -->


    <!-- Payment Method: Bancontact - Mrcash-->
    <!-- Mrcash Payment Method Facade configuration -->
    <virtualType name="MrcashFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Mrcash::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">MrcashValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">BuckarooValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">MrcashGatewayCommandPool</argument>
        </arguments>
    </virtualType>
    <!-- Mrcash Value handlers infrastructure -->
    <virtualType name="MrcashValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MrcashConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="MrcashConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Mrcash</argument>
        </arguments>
    </virtualType>
    <!-- END Mrcash Value handlers infrastructure -->

    <!-- Mrcash Commands infrastructure -->
    <virtualType name="MrcashGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">MrcashOrderCommand</item>
                <item name="refund" xsi:type="string">BuckarooRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Mrcash Order Command -->
    <virtualType name="MrcashOrderCommand" type="BuckarooOrderCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">MrcashOrderRequest</argument>
            <argument name="client" xsi:type="object">TransactionPay</argument>
        </arguments>
    </virtualType>
    <!-- Mrcash Order Command - Request Builder -->
    <virtualType name="MrcashOrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">BuckarooOrderRequest</item>
                <item name="token_encrypted_data" xsi:type="string">Buckaroo\Magento2\Gateway\Request\TokenEncryptedDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Mrcash Order Command -->
    <!-- END Mrcash Commands infrastructure -->
    <!-- END Payment Method: Bancontact - Mrcash -->

    <!-- Payment Method: Payconiq -->
    <!-- Payconiq Payment Method Facade configuration -->
    <virtualType name="PayconiqFacade" type="BuckarooRemainderFacade">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Payconiq::CODE</argument>
            <argument name="valueHandlerPool" xsi:type="object">PayconiqValueHandlerPool</argument>
        </arguments>
    </virtualType>
    <!-- Payconiq Value handlers infrastructure -->
    <virtualType name="PayconiqValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">PayconiqConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="PayconiqConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Payconiq</argument>
        </arguments>
    </virtualType>
    <!-- END Payconiq Value handlers infrastructure -->
    <!-- END Payment Method: Payconiq -->

    <!-- Payment Method: Billink -->
    <!-- Billink Payment Method Facade configuration -->
    <virtualType name="BillinkFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Billink::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">BillinkValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">BuckarooValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">BillinkGatewayCommandPool</argument>
            <argument name="usesRedirect" xsi:type="boolean">false</argument>
        </arguments>
    </virtualType>

    <!-- Billink Value handlers infrastructure -->
    <virtualType name="BillinkValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">BillinkConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="BillinkConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Billink</argument>
        </arguments>
    </virtualType>
    <!-- END Billink Value handlers infrastructure -->

    <!-- Billink Commands infrastructure -->
    <virtualType name="BillinkGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">BillinkOrderCommand</item>
                <item name="authorize" xsi:type="string">BillinkAuthorizeCommand</item>
                <item name="capture" xsi:type="string">BuckarooCaptureCommand</item>
                <item name="cancel" xsi:type="string">BuckarooCancelCommand</item>
                <item name="void" xsi:type="string">BuckarooCancelCommand</item>
                <item name="refund" xsi:type="string">BuckarooRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Billink Order Command -->
    <virtualType name="BillinkOrderCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">BillinkOrderRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionPay</argument>
            <argument name="handler" xsi:type="object">OrderResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Billink Order Command - Request Builder -->
    <virtualType name="BillinkOrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">BuckarooOrderRequest</item>
                <item name="vat_number" xsi:type="string">Buckaroo\Magento2\Gateway\Request\AdditionalInformation\VATNumberDataBuilder</item>
                <item name="customer" xsi:type="string">CustomerBillinkDataBuilder</item>
                <item name="articles" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Articles\ArticlesDataBuilder</item>
                <item name="skipPush" xsi:type="string">Buckaroo\Magento2\Gateway\Request\SkipPushDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="CustomerBillinkDataBuilder" type="BuckarooWithIdBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="billing" xsi:type="string">BillinkBillingDataBuilder</item>
                <item name="shipping" xsi:type="string">BillinkShippingDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="BillinkBillingDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="recipient" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Recipient\BillinkDataBuilder</item>
                <item name="address" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\BillingAddressDataBuilder</item>
                <item name="phone" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\PhoneDataBuilder</item>
                <item name="email" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\EmailAddressDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="BillinkShippingDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="recipient" xsi:type="string">BillinkShippingRecipientDataBuilder</item>
                <item name="address" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\ShippingAddressDataBuilder</item>
                <item name="phone" xsi:type="string">PhoneShippingDataBuilder</item>
                <item name="email" xsi:type="string">EmailAddressShippingDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="BillinkShippingRecipientDataBuilder" type="Buckaroo\Magento2\Gateway\Request\Recipient\BillinkDataBuilder">
        <arguments>
            <argument name="addressType" xsi:type="string">shipping</argument>
        </arguments>
    </virtualType>

    <virtualType name="PhoneShippingDataBuilder" type="Buckaroo\Magento2\Gateway\Request\Address\PhoneDataBuilder">
        <arguments>
            <argument name="addressType" xsi:type="string">shipping</argument>
        </arguments>
    </virtualType>

    <virtualType name="EmailAddressShippingDataBuilder" type="Buckaroo\Magento2\Gateway\Request\Address\EmailAddressDataBuilder">
        <arguments>
            <argument name="addressType" xsi:type="string">shipping</argument>
        </arguments>
    </virtualType>
    <!-- END Billink Order Command -->

    <!-- Billink Authorize Command -->
    <virtualType name="BillinkAuthorizeCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">BillinkAuthorizeRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionAuthorize</argument>
            <argument name="handler" xsi:type="object">AuthorizeResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- Billink Authorize Command - Request Builder -->
    <virtualType name="BillinkAuthorizeRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">BillinkOrderRequest</item>
                <item name="additional_parameters" xsi:type="string">AdditionalParametersAuthorizeDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Billink Authorize Command -->

    <!-- Billink Capture Command -->
    <virtualType name="BillinkCaptureCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">BuckarooCaptureRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionCapture</argument>
            <argument name="handler" xsi:type="object">CaptureResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- END Billink Capture Command -->
    <!-- END Billink Commands infrastructure -->
    <!-- END Payment Method: Billink -->

    <!-- Payment Method: Afterpay -->
    <!-- Afterpay Payment Method Facade configuration -->
    <virtualType name="AfterpayFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Afterpay20::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">AfterpayValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">AfterpayValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">AfterpayGatewayCommandPool</argument>
            <argument name="usesRedirect" xsi:type="boolean">false</argument>
        </arguments>
    </virtualType>

    <!-- Afterpay Value handlers infrastructure -->
    <virtualType name="AfterpayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">AfterpayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="AfterpayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Afterpay20</argument>
        </arguments>
    </virtualType>
    <!-- END Afterpay Value handlers infrastructure -->

    <!-- Afterpay's validators infrastructure -->
    <virtualType name="AfterpayValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="buckaroo_availability" xsi:type="string">BuckarooAvailabilityValidator</item>
                <item name="country" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\CountryValidator</item>
                <item name="global" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\HouseNumberValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Afterpay validators infrastructure -->

    <!-- Afterpay Commands infrastructure -->
    <virtualType name="AfterpayGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">AfterpayOrderCommand</item>
                <item name="authorize" xsi:type="string">AfterpayAuthorizeCommand</item>
                <item name="capture" xsi:type="string">BuckarooCaptureCommand</item>
                <item name="cancel" xsi:type="string">BuckarooCancelCommand</item>
                <item name="void" xsi:type="string">BuckarooCancelCommand</item>
                <item name="refund" xsi:type="string">AfterpayRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Afterpay Order Command -->
    <virtualType name="AfterpayOrderCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">AfterpayOrderRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">Buckaroo\Magento2\Gateway\Http\Client\TransactionPayRemainder</argument>
            <argument name="handler" xsi:type="object">OrderResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Afterpay Order Command - Request Builder -->
    <virtualType name="AfterpayOrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">BuckarooOrderRequest</item>
                <item name="payRemainder" xsi:type="string">BuckarooPayRemainderRequest</item>
                <item name="customer" xsi:type="string">CustomerAfterpayDataBuilder</item>
                <item name="service_version" xsi:type="string">Buckaroo\Magento2\Gateway\Request\AfterpaySCADataBuilder</item>
                <item name="articles" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Articles\ArticlesDataBuilder</item>
                <item name="skipPush" xsi:type="string">Buckaroo\Magento2\Gateway\Request\SkipPushDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="CustomerAfterpayDataBuilder" type="BuckarooWithIdBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="billing" xsi:type="string">AfterpayBillingDataBuilder</item>
                <item name="shipping" xsi:type="string">AfterpayShippingDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="AfterpayBillingDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="recipient" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Recipient\AfterpayDataBuilder</item>
                <item name="address" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\BillingAddressDataBuilder</item>
                <item name="phone" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\PhoneLandlineDataBuilder</item>
                <item name="email" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\EmailAddressDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="AfterpayShippingDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="recipient" xsi:type="string">AfterpayShippingRecipientDataBuilder</item>
                <item name="address" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\ShippingAddressDataBuilder</item>
                <item name="phone" xsi:type="string">PhoneLandlineShippingDataBuilder</item>
                <item name="email" xsi:type="string">EmailAddressShippingDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="AfterpayShippingRecipientDataBuilder" type="Buckaroo\Magento2\Gateway\Request\Recipient\AfterpayDataBuilder">
        <arguments>
            <argument name="addressType" xsi:type="string">shipping</argument>
        </arguments>
    </virtualType>

    <virtualType name="PhoneLandlineShippingDataBuilder" type="Buckaroo\Magento2\Gateway\Request\Address\PhoneLandlineDataBuilder">
        <arguments>
            <argument name="addressType" xsi:type="string">shipping</argument>
        </arguments>
    </virtualType>
    <!-- END Afterpay Order Command -->

    <!-- Afterpay Authorize Command -->
    <virtualType name="AfterpayAuthorizeCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">AfterpayAuthorizeRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionAuthorizePayRemainder</argument>
            <argument name="handler" xsi:type="object">AuthorizeResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- Afterpay Authorize Command - Request Builder -->
    <virtualType name="AfterpayAuthorizeRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">AfterpayOrderRequest</item>
                <item name="additional_parameters" xsi:type="string">AdditionalParametersAuthorizeDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Afterpay Authorize Command -->

    <!-- Afterpay Refund Command -->
    <virtualType name="AfterpayRefundCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">AfterpayRefundRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionRefund</argument>
            <argument name="handler" xsi:type="object">RefundResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- Afterpay Refund Command - Request Builder -->
    <virtualType name="AfterpayRefundRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="refund_request" xsi:type="string">BuckarooPartialRefundRequest</item>
                <item name="service_version" xsi:type="string">Buckaroo\Magento2\Gateway\Request\AfterpaySCADataBuilder</item>
                <item name="creditmemmo_articles" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Articles\CreditmemoArticlesDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Afterpay Refund Command -->
    <!-- END Afterpay Commands infrastructure -->
    <!-- END Payment Method: Afterpay -->

    <!-- Payment Method: Afterpay Old 2-->
    <!-- Afterpay Old 2 Payment Method Facade configuration -->
    <virtualType name="AfterpayOldFacade2" type="AfterpayOldFacade">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Afterpay2::CODE</argument>
            <argument name="valueHandlerPool" xsi:type="object">AfterpayOld2ValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">BuckarooValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">AfterpayOldGatewayCommandPool</argument>
        </arguments>
    </virtualType>
    <!-- Afterpay Old 2 Value handlers infrastructure -->
    <virtualType name="AfterpayOld2ValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">AfterpayOld2ConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="AfterpayOld2ConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Afterpay2</argument>
        </arguments>
    </virtualType>
    <!-- END Afterpay Old 2 Value handlers infrastructure -->

    <!-- Afterpay Old Payment Method Facade configuration -->
    <virtualType name="AfterpayOldFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Afterpay::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">AfterpayOldValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">BuckarooValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">AfterpayOldGatewayCommandPool</argument>
            <argument name="usesRedirect" xsi:type="boolean">false</argument>
        </arguments>
    </virtualType>
    <!-- Afterpay Old Value handlers infrastructure -->
    <virtualType name="AfterpayOldValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">AfterpayOldConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="AfterpayOldConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Afterpay</argument>
        </arguments>
    </virtualType>
    <!-- END Afterpay Old Value handlers infrastructure -->

    <!-- Afterpay Old Commands infrastructure -->
    <virtualType name="AfterpayOldGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">AfterpayOldOrderCommand</item>
                <item name="authorize" xsi:type="string">AfterpayOldAuthorizeCommand</item>
                <item name="capture" xsi:type="string">AfterpayOldCaptureCommand</item>
                <item name="cancel" xsi:type="string">BuckarooCancelCommand</item>
                <item name="void" xsi:type="string">BuckarooCancelCommand</item>
                <item name="refund" xsi:type="string">AfterpayOldRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Afterpay Old Order Command -->
    <virtualType name="AfterpayOldOrderCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">AfterpayOldOrderRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">Buckaroo\Magento2\Gateway\Http\Client\TransactionPayRemainder</argument>
            <argument name="handler" xsi:type="object">OrderResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Afterpay Old Order Command - Request Builder -->
    <virtualType name="AfterpayOldOrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">BuckarooOrderRequest</item>
                <item name="payRemainder" xsi:type="string">BuckarooPayRemainderRequest</item>
                <item name="afterpayold" xsi:type="string">Buckaroo\Magento2\Gateway\Request\AfterpayOldDataBuilder</item>
                <item name="customer" xsi:type="string">CustomerAfterpayOldDataBuilder</item>
                <item name="articles" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Articles\ArticlesDataBuilder</item>
                <item name="skipPush" xsi:type="string">Buckaroo\Magento2\Gateway\Request\SkipPushDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="CustomerAfterpayOldDataBuilder" type="BuckarooWithIdBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="billing" xsi:type="string">AfterpayOldBillingDataBuilder</item>
                <item name="shipping" xsi:type="string">AfterpayOldShippingDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="AfterpayOldBillingDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="recipient" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Recipient\AfterpayOldDataBuilder</item>
                <item name="address" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\BillingAddressDataBuilder</item>
                <item name="phone" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\PhoneDataBuilder</item>
                <item name="email" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\EmailAddressDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="AfterpayOldShippingDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="recipient" xsi:type="string">AfterpayOldShippingRecipientDataBuilder</item>
                <item name="address" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\ShippingAddressDataBuilder</item>
                <item name="phone" xsi:type="string">PhoneShippingDataBuilder</item>
                <item name="email" xsi:type="string">EmailAddressShippingDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="AfterpayOldShippingRecipientDataBuilder" type="Buckaroo\Magento2\Gateway\Request\Recipient\AfterpayOldDataBuilder">
        <arguments>
            <argument name="addressType" xsi:type="string">shipping</argument>
        </arguments>
    </virtualType>
    <!-- END Afterpay Old Order Command -->

    <!-- Afterpay Old Authorize Command -->
    <virtualType name="AfterpayOldAuthorizeCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">AfterpayOldAuthorizeRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionAuthorizePayRemainder</argument>
            <argument name="handler" xsi:type="object">AuthorizeResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- Afterpay Old Authorize Command - Request Builder -->
    <virtualType name="AfterpayOldAuthorizeRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">AfterpayOldOrderRequest</item>
                <item name="additional_parameters" xsi:type="string">AdditionalParametersAuthorizeDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Afterpay Old Authorize Command -->

    <!-- Afterpay Old Capture Command -->
    <virtualType name="AfterpayOldCaptureCommand" type="BuckarooCaptureCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">AfterpayOldCaptureRequest</argument>
        </arguments>
    </virtualType>
    <!-- Afterpay Old Capture Command - Request Builder -->
    <virtualType name="AfterpayOldCaptureRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="capture_request" xsi:type="string">BuckarooCaptureRequest</item>
                <item name="afterpayold" xsi:type="string">Buckaroo\Magento2\Gateway\Request\AfterpayOldDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Afterpay Old Authorize Command -->

    <!-- Afterpay Old Refund Command -->
    <virtualType name="AfterpayOldRefundCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">AfterpayOldRefundRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionRefund</argument>
            <argument name="handler" xsi:type="object">RefundResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- Afterpay Old Refund Command - Request Builder -->
    <virtualType name="AfterpayOldRefundRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="refund_request" xsi:type="string">BuckarooPartialRefundRequest</item>
                <item name="creditmemmo_articles" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Articles\CreditmemoArticlesDataBuilder</item>
                <item name="afterpayold" xsi:type="string">Buckaroo\Magento2\Gateway\Request\AfterpayOldDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Afterpay Old Refund Command -->
    <!-- END Afterpay Old Commands infrastructure -->
    <!-- END Payment Method: Afterpay Old -->



    <!-- Payment Method: CreditClick-->
    <!-- CreditClick Payment Method Facade configuration -->
    <virtualType name="CreditClickFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\CreditClick::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">CreditClickValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">BuckarooValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">CreditClickGatewayCommandPool</argument>
        </arguments>
    </virtualType>
    <!-- CreditClick Value handlers infrastructure -->
    <virtualType name="CreditClickValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CreditClickConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="CreditClickConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\CreditClick</argument>
        </arguments>
    </virtualType>
    <!-- END CreditClick Value handlers infrastructure -->

    <!-- CreditClick Commands infrastructure -->
    <virtualType name="CreditClickGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">CreditClickOrderCommand</item>
                <item name="refund" xsi:type="string">CreditClickRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- CreditClick Order Command -->
    <virtualType name="CreditClickOrderCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CreditClickOrderRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionPay</argument>
            <argument name="handler" xsi:type="object">OrderResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- CreditClick Order Command - Request Builder -->
    <virtualType name="CreditClickOrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">BuckarooOrderRequest</item>
                <item name="email" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\EmailAddressDataBuilder</item>
                <item name="customer_name" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BillingAddress\CustomerNameDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END CreditClick Order Command -->

     <!-- CreditClick Refund Command -->
    <virtualType name="CreditClickRefundCommand" type="BuckarooRefundCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CreditClickRefundRequest</argument>
        </arguments>
    </virtualType>
    <!-- CreditClick Refund Command - Request Builder -->
    <virtualType name="CreditClickRefundRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="refund_request" xsi:type="string">BuckarooRefundRequest</item>
                <item name="refund_reason" xsi:type="string">Buckaroo\Magento2\Gateway\Request\RefundReasonDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END CreditClick Order Command -->
    <!-- END CreditClick Commands infrastructure -->
    <!-- END Payment Method: CreditClick -->

    <!-- Payment Method: Apple Pay-->
    <!-- Applepay Payment Method Facade configuration -->
    <virtualType name="ApplepayFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Applepay::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">ApplepayValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">BuckarooValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">ApplepayGatewayCommandPool</argument>
        </arguments>
    </virtualType>
    <!-- Apple Pay Value handlers infrastructure -->
    <virtualType name="ApplepayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">ApplepayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="ApplepayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Applepay</argument>
        </arguments>
    </virtualType>
    <!-- END Apple Pay Value handlers infrastructure -->

    <!-- Apple Pay Commands infrastructure -->
    <virtualType name="ApplepayGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">ApplepayOrderCommand</item>
                <item name="refund" xsi:type="string">BuckarooRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Apple Pay Order Command -->
    <virtualType name="ApplepayOrderCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">ApplepayOrderRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionPay</argument>
            <argument name="handler" xsi:type="object">OrderResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Apple Pay Order Command - Request Builder -->
    <virtualType name="ApplepayOrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">BuckarooOrderRequest</item>
                <item name="applepay" xsi:type="string">Buckaroo\Magento2\Gateway\Request\AdditionalInformation\ApplepayDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Apple Pay Order Command -->
    <!-- END Apple Pay Commands infrastructure -->
    <!-- END Payment Method: Apple Pay -->


    <!-- Payment Method: Giftcards -->
    <type name="Buckaroo\Magento2\Model\Giftcard\Request\Giftcard">
        <arguments>
            <argument name="clientInterface" xsi:type="object">Buckaroo\Magento2\Gateway\Http\Client\TransactionPayRemainder</argument>
        </arguments>
    </type>
    <!-- Giftcards Payment Method Facade configuration -->
    <virtualType name="GiftcardsFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Giftcards::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">GiftcardsValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">GiftcardsValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">GiftcardsGatewayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Giftcards Value handlers infrastructure -->
    <virtualType name="GiftcardsValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">GiftcardsConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="GiftcardsConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Giftcards</argument>
        </arguments>
    </virtualType>
    <!-- END Giftcards Value handlers infrastructure -->

    <!-- Giftcards validators infrastructure -->
    <virtualType name="GiftcardsValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="buckaroo_availability" xsi:type="string">BuckarooAvailabilityValidator</item>
                <item name="country" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\CountryValidator</item>
                <item name="availability" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\AllowedGiftcardsValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Giftcards validators infrastructure -->

    <!-- Giftcards Commands infrastructure -->
    <virtualType name="GiftcardsGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">GiftcardsOrderCommand</item>
                <item name="refund" xsi:type="string">GiftcardsRefundCommand</item>
                <item name="remove" xsi:type="string">GiftcardsRemoveCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Giftcards Order Command -->
    <virtualType name="GiftcardsOrderCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">GiftcardsOrderRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionPayRedirect</argument>
            <argument name="handler" xsi:type="object">OrderResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
            <argument name="skipCommand" xsi:type="object">Buckaroo\Magento2\Gateway\Skip\GiftcardOrderSkip</argument>
        </arguments>
    </virtualType>

    <!-- Giftcards Order Command - Request Builder -->
    <virtualType name="GiftcardsOrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">BuckarooOrderRequest</item>
                <item name="payRemainder" xsi:type="string">BuckarooPayRemainderRequest</item>
                <item name="giftcards" xsi:type="string">Buckaroo\Magento2\Gateway\Request\GiftcardsDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Giftcards Order Command -->

    <!-- Giftcards Refund Command -->
    <virtualType name="GiftcardsRefundCommand" type="BuckarooRefundCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">GiftcardsRefundRequest</argument>
        </arguments>
    </virtualType>

    <!-- Giftcards Refund Command - Request Builder -->
    <virtualType name="GiftcardsRefundRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="refund_request" xsi:type="string">BuckarooRefundRequest</item>
                <item name="giftcard_name" xsi:type="string">Buckaroo\Magento2\Gateway\Request\AdditionalInformation\GiftcardNameDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Giftcards Refund Command -->

    <!-- Giftcards Remove Command -->
    <virtualType name="GiftcardsRemoveCommand" type="BuckarooRefundCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">GiftcardsRemoveRequest</argument>
            <argument name="handler" xsi:type="object">Buckaroo\Magento2\Gateway\Response\GiftCardRemoveHandler</argument>
        </arguments>
    </virtualType>

    <!-- Giftcards Remove Command - Request Builder -->
    <virtualType name="GiftcardsRemoveRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="group_transaction_details" xsi:type="string">Buckaroo\Magento2\Gateway\Request\GroupTransactionDetails</item>
                <item name="return_url" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ReturnUrlDataBuilder</item>
                <item name="client_ip" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ClientIPDataBuilder</item>
                <item name="description" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\DescriptionDataBuilder</item>
                <item name="additional_parameters" xsi:type="string">AdditionalParametersRefundDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <type name="Buckaroo\Magento2\Model\Giftcard\Remove">
        <arguments>
            <argument name="removeCommand" xsi:type="object">GiftcardsRemoveCommand</argument>
        </arguments>
    </type>
    <!-- END Giftcards Remove Command -->
    <!-- END Giftcards Commands infrastructure -->
    <!-- END Payment Method: Giftcards -->

    <!-- Payment Method: PayPerEmail -->
    <!-- PayPerEmail Payment Method Facade configuration -->
    <virtualType name="PayPerEmailFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\PayPerEmail::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">PayPerEmailValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">PayPerEmailValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">PayPerEmailGatewayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- PayPerEmail Value handlers infrastructure -->
    <virtualType name="PayPerEmailValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">PayPerEmailConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="PayPerEmailConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\PayPerEmail</argument>
        </arguments>
    </virtualType>
    <!-- END PayPerEmail Value handlers infrastructure -->

    <!-- PayPerEmail validators infrastructure -->
    <virtualType name="PayPerEmailValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="buckaroo_availability" xsi:type="string">BuckarooAvailabilityValidator</item>
                <item name="country" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\CountryValidator</item>
                <item name="availability" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\AreaCodeValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END PayPerEmail validators infrastructure -->

    <!-- PayPerEmail Commands infrastructure -->
    <virtualType name="PayPerEmailGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">PayPerEmailOrderCommand</item>
                <item name="paylink" xsi:type="string">PayLinkCommand</item>
                <item name="refund" xsi:type="string">BuckarooRefundWithCreditManagementCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- PayPerEmail Order Command -->
    <virtualType name="PayPerEmailOrderCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PayPerEmailOrderRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionPaymentInvitation</argument>
            <argument name="handler" xsi:type="object">OrderWithCreditManagementResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- PayPerEmail Order Command - Request Builder -->
    <virtualType name="PayPerEmailOrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">BuckarooOrderRequest</item>
                <item name="payPerEmail" xsi:type="string">Buckaroo\Magento2\Gateway\Request\PayPerEmailDataBuilder</item>
                <item name="additional_parameters" xsi:type="string">AdditionalParametersPayPerEmailDataBuilder</item>
                <item name="credit_management" xsi:type="string">BuckarooDefaultCreditManagment</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END PayPerEmail Order Command -->
    <!-- END PayPerEmail Commands infrastructure -->
    <!-- END Payment Method: PayPerEmail -->

    <!-- Payment Method: PayLink -->
    <virtualType name="PayLinkFacade" type="PayPerEmailFacade">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\PayLink::CODE</argument>
            <argument name="valueHandlerPool" xsi:type="object">PayLinkValueHandlerPool</argument>
            <argument name="commandPool" xsi:type="object">PayLinkGatewayCommandPool</argument>
        </arguments>
    </virtualType>
    <!-- PayLink Value handlers infrastructure -->
    <virtualType name="PayLinkValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">PayLinkConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="PayLinkConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\PayLink</argument>
        </arguments>
    </virtualType>
    <!-- END PayLink Value handlers infrastructure -->

    <!-- PayLink Commands infrastructure -->
    <virtualType name="PayLinkGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">PayLinkCommand</item>
                <item name="refund" xsi:type="string">BuckarooRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- PayLink Command -->
    <virtualType name="PayLinkCommand" type="PayPerEmailOrderCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PayLinkRequest</argument>
            <argument name="handler" xsi:type="object">PayLinkResponseHandler</argument>
        </arguments>
    </virtualType>
    <!-- PayLink Command - Request Builder -->
    <virtualType name="PayLinkRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">BuckarooOrderRequest</item>
                <item name="payPerEmail" xsi:type="string">Buckaroo\Magento2\Gateway\Request\PayLinkDataBuilder</item>
                <item name="additional_parameters" xsi:type="string">AdditionalParametersPayPerEmailDataBuilder</item>
                <item name="additional_parameters2" xsi:type="string">AdditionalParametersPayLinkDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Buckaroo Order Command - Response Handler -->
    <virtualType name="PayLinkResponseHandler"  type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="response" xsi:type="string">OrderResponseHandler</item>
                <item name="paylink" xsi:type="string">Buckaroo\Magento2\Gateway\Response\PayLinkHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END PayLink Command -->
    <!-- END PayLink Commands infrastructure -->
    <!-- END Payment Method: PayLink -->

    <!-- Payment Method: Transfer-->
    <!-- Transfer Payment Method Facade configuration -->
    <virtualType name="TransferFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Transfer::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">TransferValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">BuckarooValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">TransferGatewayCommandPool</argument>
            <argument name="usesRedirect" xsi:type="boolean">false</argument>
        </arguments>
    </virtualType>
    <!-- Transfer Value handlers infrastructure -->
    <virtualType name="TransferValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">TransferConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="TransferConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Transfer
            </argument>
        </arguments>
    </virtualType>
    <!-- END Transfer Value handlers infrastructure -->

    <!-- Transfer Commands infrastructure -->
    <virtualType name="TransferGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">TransferOrderCommand</item>
                <item name="refund" xsi:type="string">BuckarooRefundWithCreditManagementCommand</item>
                <item name="void" xsi:type="string">BuckarooVoidCreditManagementCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Transfer Order Command -->
    <virtualType name="TransferOrderCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">TransferOrderRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionPay</argument>
            <argument name="handler" xsi:type="object">TransferResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Transfer Order Command - Request Builder -->
    <virtualType name="TransferOrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">BuckarooOrderRequest</item>
                <item name="email" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\EmailAddressDataBuilder</item>
                <item name="customer_name" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BillingAddress\CustomerNameDataBuilder</item>
                <item name="country" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BillingAddress\CountryDataBuilder</item>
                <item name="transfer_config_params" xsi:type="string">Buckaroo\Magento2\Gateway\Request\TransferOrderDataBuilder</item>
                <item name="credit_management" xsi:type="string">BuckarooDefaultCreditManagment</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="TransferResponseHandler"  type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="response" xsi:type="string">OrderResponseHandler</item>
                <item name="credit_management" xsi:type="string">Buckaroo\Magento2\Gateway\Response\CreditManagementOrderHandler</item>
                <item name="transfer_details" xsi:type="string">Buckaroo\Magento2\Gateway\Response\TransferDetailsHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Transfer Order Command -->
    <!-- END Transfer Commands infrastructure -->
    <!-- END Payment Method: Transfer -->


    <!-- Payment Method: Voucher -->
    <!-- Voucher Payment Method Facade configuration -->
    <virtualType name="VoucherFacade" type="BuckarooRemainderFacade">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Voucher::CODE</argument>
            <argument name="valueHandlerPool" xsi:type="object">VoucherValueHandlerPool</argument>
            <argument name="usesRedirect" xsi:type="boolean">false</argument>
        </arguments>
    </virtualType>
    <!-- Voucher Value handlers infrastructure -->
    <virtualType name="VoucherValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">VoucherConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="VoucherConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Voucher</argument>
        </arguments>
    </virtualType>
    <!-- END Voucher Value handlers infrastructure -->

   <type name="Buckaroo\Magento2\Model\Voucher\ApplyVoucherRequest">
        <arguments>
            <argument name="clientInterface" xsi:type="object">Buckaroo\Magento2\Gateway\Http\Client\TransactionPayRemainder</argument>
        </arguments>
    </type>
    <!-- END Voucher Commands infrastructure -->
    <!-- END Payment Method: Voucher -->


    <!-- Payment Method: Sofortbanking -->
    <!-- Sofortbanking Payment Method Facade configuration -->
    <virtualType name="SofortbankingFacade" type="BuckarooFacade">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Sofortbanking::CODE</argument>
            <argument name="valueHandlerPool" xsi:type="object">SofortbankingValueHandlerPool</argument>
        </arguments>
    </virtualType>

    <!-- Sofortbanking Value handlers infrastructure -->
    <virtualType name="SofortbankingValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">SofortbankingConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="SofortbankingConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Sofortbanking</argument>
        </arguments>
    </virtualType>
    <!-- END Sofortbanking Value handlers infrastructure -->
    <!-- END Payment Method: Sofortbanking -->


    <!-- Payment Method: PayPal -->
    <!-- PayPal Payment Method Facade configuration -->
    <virtualType name="PaypalFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Paypal::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">PaypalValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">BuckarooValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">PaypalGatewayCommandPool</argument>
        </arguments>
    </virtualType>
    <!-- PayPal Value handlers infrastructure -->
    <virtualType name="PaypalValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">PaypalConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="PaypalConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Paypal
            </argument>
        </arguments>
    </virtualType>
    <!-- END PayPal Value handlers infrastructure -->

    <!-- PayPal Commands infrastructure -->
    <virtualType name="PaypalGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">PaypalOrderCommand</item>
                <item name="refund" xsi:type="string">BuckarooRefundCommand</item>
                <item name="void" xsi:type="string">BuckarooCancelCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- PayPal Order Command -->
    <virtualType name="PaypalOrderCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PaypalOrderRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">Buckaroo\Magento2\Gateway\Http\Client\TransactionPayRemainder</argument>
            <argument name="handler" xsi:type="object">OrderResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- PayPal Order Command - Request Builder -->
    <virtualType name="PaypalOrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">BuckarooOrderRequest</item>
                <item name="payRemainder" xsi:type="string">BuckarooPayRemainderRequest</item>
                <item name="expressOrderId" xsi:type="string">Buckaroo\Magento2\Gateway\Request\AdditionalInformation\ExpressOrderIdDataBuilder</item>
                <item name="paypal_extrainfo" xsi:type="string">Buckaroo\Magento2\Gateway\Request\PaypalExtrainfoDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END PayPal Order Command -->
    <!-- END PayPal Commands infrastructure -->
    <!-- END Payment Method: PayPal -->


    <!-- Payment Method: Creditcard -->
    <!-- Creditcard Payment Method Facade configuration -->
    <virtualType name="CreditcardFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Creditcard::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info\Creditcard</argument>
            <argument name="valueHandlerPool" xsi:type="object">CreditcardValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">BuckarooValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">CreditcardGatewayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Creditcard Value handlers infrastructure -->
    <virtualType name="CreditcardValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CreditcardConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="CreditcardConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Creditcard</argument>
        </arguments>
    </virtualType>
    <!-- END Creditcard Value handlers infrastructure -->

    <!-- Creditcard Commands infrastructure -->
    <virtualType name="CreditcardGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">CreditcardOrderCommand</item>
                <item name="authorize" xsi:type="string">CreditcardAuthorizeCommand</item>
                <item name="capture" xsi:type="string">CreditcardCaptureCommand</item>
                <item name="refund" xsi:type="string">CreditcardRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Creditcard Order Command -->
    <virtualType name="CreditcardOrderCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CreditcardOrderRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">Buckaroo\Magento2\Gateway\Http\Client\TransactionPayRemainder</argument>
            <argument name="handler" xsi:type="object">OrderResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Creditcard Order Command - Request Builder -->
    <virtualType name="CreditcardOrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">BuckarooOrderRequest</item>
                <item name="creditcard_type" xsi:type="string">Buckaroo\Magento2\Gateway\Request\AdditionalInformation\CreditcardTypeDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Creditcard Order Command -->

    <!-- Creditcard Authorize Command -->
    <virtualType name="CreditcardAuthorizeCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CreditcardAuthorizeRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionAuthorize</argument>
            <argument name="handler" xsi:type="object">AuthorizeResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- Creditcard Authorize Command - Request Builder -->
    <virtualType name="CreditcardAuthorizeRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">CreditcardOrderRequest</item>
                <item name="additional_parameters" xsi:type="string">AdditionalParametersAuthorizeDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Creditcard Authorize Command -->

    <!-- Creditcard Capture Command -->
    <virtualType name="CreditcardCaptureCommand" type="BuckarooCaptureCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CreditcardCaptureRequest</argument>
        </arguments>
    </virtualType>
    <!-- Creditcard Capture Command - Request Builder -->
    <virtualType name="CreditcardCaptureRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="method" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\PaymentMethodDataBuilder</item>
                <item name="invoice" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Invoice\InvoiceNumberDataBuilder</item>
                <item name="order" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\OrderNumberDataBuilder</item>
                <item name="amountDebit" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Invoice\AmountInvoicedDataBuilder</item>
                <item name="description" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\DescriptionDataBuilder</item>
                <item name="client_ip" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ClientIPDataBuilder</item>
                <item name="return_url" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ReturnUrlDataBuilder</item>
                <item name="original_transaction_key" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Invoice\OriginalTransactionKeyDataBuilder</item>
                <item name="additional_parameters" xsi:type="string">AdditionalParametersCaptureDataBuilder</item>
                <item name="creditcard_type" xsi:type="string">Buckaroo\Magento2\Gateway\Request\AdditionalInformation\CreditcardTypeDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Creditcard Capture Command -->

    <!-- Creditcard Refund Command -->
    <virtualType name="CreditcardRefundCommand" type="BuckarooRefundCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CreditcardRefundRequest</argument>
        </arguments>
    </virtualType>
    <!-- Creditcard Refund Command - Request Builder -->
    <virtualType name="CreditcardRefundRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="refund" xsi:type="string">BuckarooRefundRequest</item>
                <item name="creditcard_type" xsi:type="string">Buckaroo\Magento2\Gateway\Request\AdditionalInformation\CreditcardTypeDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Creditcard Refund Command -->
    <!-- END Creditcard Commands infrastructure -->
    <!-- END Payment Method: Creditcard -->


    <!-- Payment Method: CreditcardEncrypted -->
    <!-- CreditcardEncrypted Payment Method Facade configuration -->
    <virtualType name="CreditcardEncryptedFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Creditcards::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">CreditcardEncryptedValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">BuckarooValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">CreditcardEncryptedGatewayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- CreditcardEncrypted Value handlers infrastructure -->
    <virtualType name="CreditcardEncryptedValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CreditcardEncryptedConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="CreditcardEncryptedConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Creditcards</argument>
        </arguments>
    </virtualType>
    <!-- END CreditcardEncrypted Value handlers infrastructure -->

    <!-- CreditcardEncrypted Commands infrastructure -->
    <virtualType name="CreditcardEncryptedGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">CreditcardEncryptedOrderCommand</item>
                <item name="authorize" xsi:type="string">CreditcardEncryptedAuthorizeCommand</item>
                <item name="capture" xsi:type="string">CreditcardEncryptedCaptureCommand</item>
                <item name="refund" xsi:type="string">CreditcardRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- CreditcardEncrypted Order Command -->
    <virtualType name="CreditcardEncryptedOrderCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CreditcardEncryptedOrderRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionEncryptedPayRemainder</argument>
            <argument name="handler" xsi:type="object">OrderResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <virtualType name="AmountPayRemainderEncrypted" type="Buckaroo\Magento2\Gateway\Request\PayReminder\AmountDataBuilder">
        <arguments>
            <argument name="serviceAction" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::PAY_ENCRYPTED</argument>
            <argument name="newServiceAction" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::PAY_REMAINDER_ENCRYPTED</argument>
        </arguments>
    </virtualType>

    <virtualType name="OriginalTransactionKeyEncryptedDataBuilder" type="Buckaroo\Magento2\Gateway\Request\PayReminder\OriginalTransactionKeyDataBuilder">
        <arguments>
            <argument name="serviceAction" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::PAY_ENCRYPTED</argument>
            <argument name="newServiceAction" xsi:type="const">Buckaroo\Magento2\Gateway\Http\Client\TransactionType::PAY_REMAINDER_ENCRYPTED</argument>
        </arguments>
    </virtualType>

    <!-- CreditcardEncrypted Order Command - Request Builder -->
    <virtualType name="CreditcardEncryptedOrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">BuckarooOrderRequest</item>
                <item name="amount" xsi:type="string">AmountPayRemainderEncrypted</item>
                <item name="original_transaction_key" xsi:type="string">OriginalTransactionKeyEncryptedDataBuilder</item>
                <item name="creditcard_encrypted" xsi:type="string">Buckaroo\Magento2\Gateway\Request\AdditionalInformation\CreditcardEncryptedDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END CreditcardEncrypted Order Command -->

    <!-- CreditcardEncrypted Authorize Command -->
    <virtualType name="CreditcardEncryptedAuthorizeCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CreditcardEncryptedAuthorizeRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionAuthorizeEncrypted</argument>
            <argument name="handler" xsi:type="object">AuthorizeResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- CreditcardEncrypted Authorize Command - Request Builder -->
    <virtualType name="CreditcardEncryptedAuthorizeRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">CreditcardEncryptedOrderRequest</item>
                <item name="additional_parameters" xsi:type="string">AdditionalParametersAuthorizeDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END CreditcardEncrypted Authorize Command -->

    <!-- CreditcardEncrypted Capture Command -->
    <virtualType name="CreditcardEncryptedCaptureCommand" type="BuckarooCaptureCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">CreditcardEncryptedCaptureRequest</argument>
        </arguments>
    </virtualType>
    <!-- CreditcardEncrypted Capture Command - Request Builder -->
    <virtualType name="CreditcardEncryptedCaptureRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="method" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\PaymentMethodDataBuilder</item>
                <item name="invoice" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Invoice\InvoiceNumberDataBuilder</item>
                <item name="order" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\OrderNumberDataBuilder</item>
                <item name="amountDebit" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Invoice\AmountInvoicedDataBuilder</item>
                <item name="description" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\DescriptionDataBuilder</item>
                <item name="client_ip" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ClientIPDataBuilder</item>
                <item name="return_url" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BasicParameter\ReturnUrlDataBuilder</item>
                <item name="original_transaction_key" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Invoice\OriginalTransactionKeyDataBuilder</item>
                <item name="additional_parameters" xsi:type="string">AdditionalParametersCaptureDataBuilder</item>
                <item name="creditcard_type" xsi:type="string">Buckaroo\Magento2\Gateway\Request\AdditionalInformation\CreditcardEncryptedDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END CreditcardEncrypted Capture Command -->
    <!-- END CreditcardEncrypted Commands infrastructure -->
    <!-- END Payment Method: CreditcardEncrypted -->


    <!-- Payment Method: Pospayment -->
    <!-- Pospayment Payment Method Facade configuration -->
    <virtualType name="PospaymentFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Pospayment::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">PospaymentValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">PospaymentValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">PospaymentGatewayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Pospayment Value handlers infrastructure -->
    <virtualType name="PospaymentValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">PospaymentConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="PospaymentConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Pospayment</argument>
        </arguments>
    </virtualType>
    <!-- END Pospayment Value handlers infrastructure -->

    <!-- Pospayment validators infrastructure -->
    <virtualType name="PospaymentValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="buckaroo_availability" xsi:type="string">BuckarooAvailabilityValidator</item>
                <item name="country" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\CountryValidator</item>
                <item name="availability" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\PosPaymentValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Pospayment validators infrastructure -->

    <!-- Pospayment Commands infrastructure -->
    <virtualType name="PospaymentGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">PospaymentOrderCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Pospayment Order Command -->
    <virtualType name="PospaymentOrderCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PospaymentOrderRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionPay</argument>
            <argument name="handler" xsi:type="object">OrderResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- Pospayment Order Command - Request Builder -->
    <virtualType name="PospaymentOrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">BuckarooOrderRequest</item>
                <item name="terminalId" xsi:type="string">Buckaroo\Magento2\Gateway\Request\TerminalIdDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END Pospayment Order Command -->
    <!-- END Pospayment Commands infrastructure -->
    <!-- END Payment Method: Pospayment -->

    <!-- Payment Method: SepaDirectDebit -->
    <!-- SepaDirectDebit Payment Method Facade configuration -->
    <virtualType name="SepaDirectDebitFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\SepaDirectDebit::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">SepaDirectDebitValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">SepaDirectDebitValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">SepaDirectDebitGatewayCommandPool</argument>
            <argument name="usesRedirect" xsi:type="boolean">false</argument>
        </arguments>
    </virtualType>

    <!-- SepaDirectDebit Value handlers infrastructure -->
    <virtualType name="SepaDirectDebitValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">SepaDirectDebitConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="SepaDirectDebitConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\SepaDirectDebit</argument>
        </arguments>
    </virtualType>
    <!-- END SepaDirectDebit Value handlers infrastructure -->

    <!-- SepaDirectDebit validators infrastructure -->
    <virtualType name="SepaDirectDebitValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="buckaroo_availability" xsi:type="string">BuckarooAvailabilityValidator</item>
                <item name="country" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\CountryValidator</item>
                <item name="bankAccount" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\BankAccountValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END SepaDirectDebit validators infrastructure -->

    <!-- SepaDirectDebit Commands infrastructure -->
    <virtualType name="SepaDirectDebitGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">SepaDirectDebitOrderCommand</item>
                <item name="refund" xsi:type="string">BuckarooRefundWithCreditManagementCommand</item>
                <item name="void" xsi:type="string">BuckarooVoidCreditManagementCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- SepaDirectDebit Order Command -->
    <virtualType name="SepaDirectDebitOrderCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">SepaDirectDebitOrderRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">TransactionPay</argument>
            <argument name="handler" xsi:type="object">SepaDirectDebitHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>

    <!-- SepaDirectDebit Order Command - Request Builder -->
    <virtualType name="SepaDirectDebitOrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="orderRequest" xsi:type="string">BuckarooOrderRequest</item>
                <item name="sepaDirectDebit" xsi:type="string">Buckaroo\Magento2\Gateway\Request\AdditionalInformation\SepaDirectDebitDataBuilder</item>
                <item name="credit_management" xsi:type="string">BuckarooDefaultCreditManagment</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- SepaDirectDebit Order Command - Response Handler -->
    <virtualType name="SepaDirectDebitHandler"  type="Magento\Payment\Gateway\Response\HandlerChain">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="response" xsi:type="string">OrderResponseHandler</item>
                <item name="credit_management" xsi:type="string">Buckaroo\Magento2\Gateway\Response\CreditManagementOrderHandler</item>
                <item name="consumer_message" xsi:type="string">Buckaroo\Magento2\Gateway\Response\ConsumerMessageHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END SepaDirectDebit Order Command -->
    <!-- END SepaDirectDebit Commands infrastructure -->
    <!-- END Payment Method: SepaDirectDebit -->


    <!-- Payment Method: Wechatpay -->
    <!-- Wechatpay Payment Method Facade configuration -->
    <virtualType name="WechatpayFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Wechatpay::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">WechatpayValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">BuckarooValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">WechatpayGatewayCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- Wechatpay Value handlers infrastructure -->
    <virtualType name="WechatpayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">WechatpayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="WechatpayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Wechatpay</argument>
        </arguments>
    </virtualType>
    <!-- END Wechatpay Value handlers infrastructure -->

    <!-- Wechatpay Commands infrastructure -->
    <virtualType name="WechatpayGatewayCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">WechatpayOrderCommand</item>
                <item name="refund" xsi:type="string">BuckarooRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>

    <!-- Wechatpay Order Command -->
    <virtualType name="WechatpayOrderCommand" type="BuckarooRemainderOrderCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">WechatpayOrderRequest</argument>
        </arguments>
    </virtualType>

    <!-- Wechatpay Order Command - Request Builder -->
    <virtualType name="WechatpayOrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="order_request" xsi:type="string">BuckarooRemainderRequest</item>
                <item name="locale" xsi:type="string">Buckaroo\Magento2\Gateway\Request\BillingAddress\LocaleDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="CustomerWechatpayDataBuilder" type="BuckarooWithIdBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="billing" xsi:type="string">WechatpayBillingDataBuilder</item>
                <item name="shipping" xsi:type="string">WechatpayShippingDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="WechatpayBillingDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="recipient" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Recipient\WechatpayDataBuilder</item>
                <item name="address" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\BillingAddressDataBuilder</item>
                <item name="phone" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\PhoneDataBuilder</item>
                <item name="email" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\EmailAddressDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="WechatpayShippingDataBuilder" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="recipient" xsi:type="string">WechatpayShippingRecipientDataBuilder</item>
                <item name="address" xsi:type="string">Buckaroo\Magento2\Gateway\Request\Address\ShippingAddressDataBuilder</item>
                <item name="phone" xsi:type="string">PhoneShippingDataBuilder</item>
                <item name="email" xsi:type="string">EmailAddressShippingDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>

    <virtualType name="WechatpayShippingRecipientDataBuilder" type="Buckaroo\Magento2\Gateway\Request\Recipient\WechatpayDataBuilder">
        <arguments>
            <argument name="addressType" xsi:type="string">shipping</argument>
        </arguments>
    </virtualType>
    <!-- END Wechatpay Order Command -->
    <!-- END Wechatpay Commands infrastructure -->
    <!-- END Payment Method: Wechatpay -->


    <!-- Payment Method: PayByBank -->
    <!-- PayByBank Payment Method Facade configuration -->
    <virtualType name="PayByBankFacade" type="Buckaroo\Magento2\Model\Method\BuckarooAdapter">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\PayByBank::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Buckaroo\Magento2\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">PayByBankValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">PayByBankValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">PayByBankCommandPool</argument>
        </arguments>
    </virtualType>

    <!-- PayByBank Value handlers infrastructure -->
    <virtualType name="PayByBankValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">PayByBankConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="PayByBankConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\PayByBank</argument>
        </arguments>
    </virtualType>
    <!-- END PayByBank Value handlers infrastructure -->

    <!-- PayByBank validators infrastructure -->
    <virtualType name="PayByBankValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="buckaroo_availability" xsi:type="string">BuckarooAvailabilityValidator</item>
                <item name="country" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\CountryValidator</item>
                <item name="global" xsi:type="string">Buckaroo\Magento2\Gateway\Validator\IssuerValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END iDEAL validators infrastructure -->

    <!-- PayByBank Commands infrastructure -->
    <virtualType name="PayByBankCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="order" xsi:type="string">PayByBankOrderCommand</item>
                <item name="cancel" xsi:type="string">BuckarooCancelCommand</item>
                <item name="void" xsi:type="string">BuckarooCancelCommand</item>
                <item name="refund" xsi:type="string">BuckarooRefundCommand</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- PayByBank Order Command -->
    <virtualType name="PayByBankOrderCommand" type="Buckaroo\Magento2\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">PayByBankOrderRequest</argument>
            <argument name="transferFactory" xsi:type="object">Buckaroo\Magento2\Gateway\Http\SDKTransferFactory</argument>
            <argument name="client" xsi:type="object">Buckaroo\Magento2\Gateway\Http\Client\TransactionPayRemainder</argument>
            <argument name="handler" xsi:type="object">OrderResponseHandler</argument>
            <argument name="validator" xsi:type="object">Buckaroo\Magento2\Gateway\Validator\ResponseCodeSDKValidator</argument>
            <argument name="errorMessageMapper" xsi:type="object">Buckaroo\Magento2\Gateway\ErrorMapper\ErrorMessageMapper</argument>
        </arguments>
    </virtualType>
    <!-- PayByBank Order Command - Request Builder -->
    <virtualType name="PayByBankOrderRequest" type="Buckaroo\Magento2\Gateway\Request\BuckarooBuilderComposite">
        <arguments>
            <argument name="builders" xsi:type="array">
                <item name="saveIssuer" xsi:type="string">Buckaroo\Magento2\Gateway\Request\SaveIssuerDataBuilder</item>
                <item name="order" xsi:type="string">BuckarooOrderRequest</item>
                <item name="payRemainder" xsi:type="string">BuckarooPayRemainderRequest</item>
                <item name="issuer" xsi:type="string">Buckaroo\Magento2\Gateway\Request\AdditionalInformation\IssuerDataBuilder</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- END PayByBank Order Command -->
    <!-- END PayByBank Commands infrastructure -->
    <!-- END Payment Method: PayByBank -->


    <!-- Payment Method: Multibanco -->
    <!-- Multibanco Payment Method Facade configuration -->
    <virtualType name="MultibancoFacade" type="BuckarooRemainderFacade">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Multibanco::CODE</argument>
            <argument name="valueHandlerPool" xsi:type="object">MultibancoValueHandlerPool</argument>
            <argument name="usesRedirect" xsi:type="boolean">false</argument>
        </arguments>
    </virtualType>
    <!-- Multibanco Value handlers infrastructure -->
    <virtualType name="MultibancoValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MultibancoConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="MultibancoConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Multibanco</argument>
        </arguments>
    </virtualType>
    <!-- END Multibanco Value handlers infrastructure -->
    <!-- END Payment Method: Multibanco -->

    <!-- Payment Method: MBWay -->
    <!-- MBWay Payment Method Facade configuration -->
    <virtualType name="MBWayFacade" type="BuckarooRemainderFacade">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\MBWay::CODE</argument>
            <argument name="valueHandlerPool" xsi:type="object">MBWayValueHandlerPool</argument>
            <argument name="usesRedirect" xsi:type="boolean">false</argument>
        </arguments>
    </virtualType>
    <!-- MBWay Value handlers infrastructure -->
    <virtualType name="MBWayValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">MBWayConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="MBWayConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\MBWay</argument>
        </arguments>
    </virtualType>
    <!-- END MBWay Value handlers infrastructure -->
    <!-- END Payment Method: MBWay -->

    <!-- Payment Method: Knaken -->
    <!-- Knaken Payment Method Facade configuration -->
    <virtualType name="KnakenFacade" type="BuckarooRemainderFacade">
        <arguments>
            <argument name="code" xsi:type="const">Buckaroo\Magento2\Model\ConfigProvider\Method\Knaken::CODE</argument>
            <argument name="valueHandlerPool" xsi:type="object">KnakenValueHandlerPool</argument>
        </arguments>
    </virtualType>
    <!-- Knaken Value handlers infrastructure -->
    <virtualType name="KnakenValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">KnakenConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Configuration reader -->
    <virtualType name="KnakenConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">Buckaroo\Magento2\Model\ConfigProvider\Method\Knaken</argument>
        </arguments>
    </virtualType>
    <!-- END Knaken Value handlers infrastructure -->
    <!-- END Payment Method: Knaken -->
</config>
